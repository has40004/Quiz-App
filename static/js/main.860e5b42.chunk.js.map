{"version":3,"sources":["components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hos/Layout/layout.js","components/ActiveQuiz/AnswersList/AnswersItem/AnswersItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/success/Success.js","components/UI/loader/loader.js","axios/axios.js","store/actions/actionsTypes.js","store/actions/quiz.js","containers/Quiz/Quiz.js","components/UI/Input/Input.js","store/actions/authAction.js","containers/Auth/Auth.js","Form/Form.js","hos/Auxiliyar/Auxiliary.js","components/UI/Select/Select.js","containers/QuizCreator/QuizCreator.js","containers/QuizList/QuizList.js","components/Logout/Logout.js","App.js","store/reducers/authR.js","store/reducers/quiz.js","store/reducers/rootReducers.js","index.js"],"names":["MenuToggle","props","cls","isOpen","icons","faTimes","faBars","icon","onClick","onToggle","className","Backdrop","Drawer","clickHandel","onClose","links","map","link","index","to","exact","activeClassName","lable","this","console","log","isAuthenticated","push","renderLinks","Component","Layout","state","menu","toggleMenu","setState","menuCloseHandler","children","connect","auth","token","AnswersItem","onClickAnswer","answer","id","text","AnswersList","answers","ActiveQuiz","answerNumber","question","quizLength","onAnswerClickHandel","Button","clc","type","join","disabled","Finish","successCount","Object","keys","results","reduce","total","key","quiz","quizItem","faCheck","length","onReplay","Loader","axios","create","baseURL","FETCH_QUIZES_START","FETCH_QUIZES_SUCCESS","FETCH_QUIZES_ERROR","FETCH_QUIZ_SUCCESS","QUIZ_SET_STATE","FINISH_QUIZ","QUIZ_NEXT_QUESTION","QUIZ_RETRY","AUTH_SUCCESS","AUTH_LOGOUT","fetchQuizSuccess","fetchQuizesStart","fetchQuizesSuccess","quizes","fetchQuizesError","e","error","quizSetState","answerState","quizAnswerClick","answerId","dispatch","getState","activeQuestion","rightAnswerId","timeOut","window","setTimeout","number","isQuizFinished","clearTimeout","Quiz","fetchQuizById","match","params","retryQuiz","loading","isFinished","quizId","a","get","response","data","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","label","value","onChange","errorMessage","authLogout","time","logout","localStorage","removeItem","authSuccess","Auth","isFormValid","formControls","email","validation","required","password","minLength","loginHandler","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","validateControl","forEach","name","pw","isValid","trim","test","String","toLowerCase","onSubmit","renderInput","isLogin","authData","returnSecureToken","url","post","expirationData","Date","getTime","expiresIn","setItem","idToken","localId","creatControl","config","validate","validateForm","hasOwnProperty","Auxiliary","Select","options","option","creatOptionControl","creatFormControl","option1","option2","option3","option4","QuizCreator","addQuestionHandler","questionItem","creatQuizHandler","changeHandler","renderControls","selectChangeHandler","select","QuizList","fetchQuizes","Loading","lengrh","renderQuizes","Logout","App","authLogin","routes","path","component","withRouter","getItem","expirationDate","initialState","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducers","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById"],"mappings":"0jBAkBeA,G,MAbI,SAACC,GAChB,IAAIC,EAAM,aAEND,EAAME,SACND,GAAO,SAGX,IAAME,EAAQH,EAAME,OAAQE,IAAUC,IACtC,OAEI,cAAC,IAAD,CAAiBC,KAAMH,EAAOI,QAASP,EAAMQ,SAAUC,UAAWR,MCV3DS,G,MAFE,SAAAV,GAAK,OAAI,qBAAKS,UAAU,WAAWF,QAASP,EAAMO,YCwDpDI,G,kNArDXC,YAAa,WACT,EAAKZ,MAAMa,W,0DAEHC,GAAO,IAAD,OACd,OAAQA,EAAMC,KAAI,SAACC,EAAMC,GACrB,OACI,6BACI,cAAC,IAAD,CACIC,GAAIF,EAAKE,GACTC,MAAOH,EAAKG,MACZC,gBAAgB,UAChBb,QAAS,EAAKK,YAJlB,SAMKI,EAAKK,SAPLJ,Q,+BAejB,IAAIhB,EAAM,SACJqB,KAAKtB,MAAME,SACbD,GAAO,WAGX,IAAMa,EAAQ,CACV,CAACI,GAAG,IAAMG,MAAM,uCAAUF,OAAO,IAarC,OAVAI,QAAQC,IAAIF,KAAKtB,MAAMyB,iBACnBH,KAAKtB,MAAMyB,iBACXX,EAAMY,KAAM,CAACR,GAAG,gBAAkBG,MAAM,kFAAkBF,OAAO,IACjEL,EAAMY,KAAM,CAACR,GAAG,UAAYG,MAAM,iCAASF,OAAO,KAGtDL,EAAMY,KAAM,CAACR,GAAG,QAAUG,MAAM,qEAAeF,OAAO,IAKlD,qCACA,qBAAKV,UAAWR,EAAhB,SACI,6BACKqB,KAAKK,YAAYb,OAIzBQ,KAAKtB,MAAME,OAAQ,cAAC,EAAD,CAAUK,QAASe,KAAKtB,MAAMa,UAAa,Y,GAjDtDe,c,gBCCfC,E,4MAEFC,MAAM,CACFC,MAAM,G,EAEVC,WAAa,WACT,EAAKC,SAAS,CACVF,MAAQ,EAAKD,MAAMC,Q,EAG3BG,iBAAkB,WACd,EAAKD,SAAS,CACVF,MAAM,K,uDAIV,OACI,sBAAKtB,UAAU,SAAf,UACI,cAAC,EAAD,CACCP,OAAQoB,KAAKQ,MAAMC,KACnBlB,QAASS,KAAKY,iBACdT,gBAAiBH,KAAKtB,MAAMyB,kBAE7B,cAAC,EAAD,CACAjB,SAAUc,KAAKU,WACf9B,OAAQoB,KAAKQ,MAAMC,OAEnB,+BACKT,KAAKtB,MAAMmC,kB,GA5BXP,aAwCNQ,mBALf,SAAyBN,GACrB,MAAO,CACHL,kBAAoBK,EAAMO,KAAKC,SAGxBF,CAA0BP,G,OCnB1BU,G,MAxBK,SAACvC,GAGjB,IAAIC,EAAM,eAOV,OALID,EAAM8B,QAEN7B,GAAOD,EAAM8B,OAIb,oBAEIrB,UAAYR,EACZM,QAAS,kBAAMP,EAAMwC,cAAexC,EAAMyC,OAAOC,KAHrD,SAMK1C,EAAMyC,OAAOE,SCGXC,G,MAlBK,SAAA5C,GAAK,OACrB,oBAAIS,UAAU,cAAd,SAEKT,EAAM6C,QAAQ9B,KAAI,SAAC0B,EAAQxB,GAEzB,OACI,cAAC,EAAD,CAEAwB,OAAQA,EACRD,cAAiBxC,EAAMwC,cACvBV,MAAQ9B,EAAM8B,MAAQ9B,EAAM8B,MAAMW,EAAOC,IAAM,MAHxCzB,UCWP6B,G,MAnBI,SAAA9C,GACf,OACI,sBAAKS,UAAU,aAAf,UACI,oBAAGA,UAAU,WAAb,UACI,iCACI,mCAAST,EAAM+C,aAAf,OADJ,OAEK/C,EAAMgD,YAEX,sCAAShD,EAAM+C,aAAf,iBAAiC/C,EAAMiD,iBAE3C,cAAC,EAAD,CACInB,MAAO9B,EAAM8B,MACbe,QAAS7C,EAAM6C,QACfL,cAAiBxC,EAAMkD,2BCGxBC,G,MAjBA,SAACnD,GACZ,IAAMoD,EAAM,CACR,SACA,CAACpD,EAAMqD,OAEX,OACI,wBACI9C,QAASP,EAAMO,QACfE,UAAW2C,EAAIE,KAAK,KACpBC,SAAUvD,EAAMuD,SAHpB,SAMKvD,EAAMmC,aCqCJqB,G,MA5CA,SAACxD,GACZ,IAAMyD,EAAeC,OAAOC,KAAK3D,EAAM4D,SAASC,QAAO,SAACC,EAAOC,GAI3D,MAH2B,YAAvB/D,EAAM4D,QAAQG,IACdD,IAEGA,IAER,GACH,OACI,sBAAKrD,UAAU,WAAf,UACG,6BACKT,EAAMgE,KAAKjD,KAAI,SAACkD,EAAUhD,GACvB,IAAMd,EAAyC,UAAhCH,EAAM4D,QAAQK,EAASvB,IAAmBtC,IAAU8D,IAC7Dd,EAAM,CACR,SAC+B,UAA/BpD,EAAM4D,QAAQK,EAASvB,IAAkB,QAAU,WAGvD,OACI,+BAGI,mCAASzB,EAAQ,EAAjB,OAHJ,SAIKgD,EAASjB,SACV,cAAC,IAAD,CAAiB1C,KAAMH,EAAOM,UAAW2C,EAAIE,KAAK,SAJhDrC,QAWlB,yFAAewC,EAAf,iBAAiCzD,EAAMgE,KAAKG,UAC5C,gCACI,cAAC,EAAD,CAAQ5D,QAASP,EAAMoE,SAAUf,KAAK,UAAtC,oEACA,cAAC,IAAD,CAAMnC,GAAG,IAAT,SACK,cAAC,EAAD,CAASmC,KAAK,UAAd,mJChCLgB,G,MARC,SAAArE,GACX,OACI,qBAAKS,UAAU,SAAf,SACG,sBAAKA,UAAU,aAAf,UAA4B,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,+B,0DCLtG6D,MAAMC,OAAO,CACxBC,QAAS,0DCFAC,EAAqB,qBACrBC,EAAuB,uBACvBC,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAiB,iBACjBC,EAAc,cACdC,EAAqB,qBACrBC,EAAa,aACbC,EAAc,eACdC,EAAa,cCiCnB,SAASC,EAAiBnB,GAC7B,MAAO,CACHX,KAAMuB,EACNZ,QAID,SAASoB,IACZ,MAAO,CACH/B,KAAOoB,GAIR,SAASY,EAAmBC,GAC/B,MAAM,CACFjC,KAAOqB,EACPY,UAID,SAASC,EAAiBC,GAC7B,MAAO,CACHnC,KAAOsB,EACPc,MAAOD,GAIR,SAASE,EAAaC,EAAa/B,GACtC,MAAO,CACHP,KAAMwB,EACNc,cAAa/B,WAqBd,SAASgC,EAAgBC,GAC5B,OAAO,SAACC,EAAUC,GAEd,IAAMjE,EAAQiE,IAAW/B,KAEzB,GAAIlC,EAAM6D,YAAa,CACnB,IAAM5B,EAAML,OAAOC,KAAK7B,EAAM6D,aAAa,GAC3C,GAA+B,YAA3B7D,EAAM6D,YAAY5B,GAClB,OAIR,IAAMf,EAAWlB,EAAMkC,KAAKlC,EAAMkE,gBAC5BpC,EAAU9B,EAAM8B,QAEtB,GAAIZ,EAASiD,gBAAkBJ,EAAU,CAE/BjC,EAAQZ,EAASN,MACnBkB,EAAQZ,EAASN,IAAM,WAG3BoD,EAASJ,EAAa,eAAGG,EAAW,WAAYjC,IAEhD,IAAMsC,EAAUC,OAAOC,YAAY,WAlCxC,IAA0BC,GAO1B,SAAwBvE,GAC3B,OAAOA,EAAMkE,eAAgB,IAAMlE,EAAMkC,KAAKG,OA2B9BmC,CAAexE,GAIfgE,GAvCaO,EAuCavE,EAAMkE,eAAiB,EAtC3D,CACF3C,KAAM0B,EACNsB,YAiCYP,EAzCT,CACHzC,KAAOyB,IA8CCqB,OAAOI,aAAaL,KAErB,UAKHtC,EAAQZ,EAASN,IAAM,QACvBoD,EAASJ,EAAa,eAAGG,EAAW,SAAUjC,K,IC5HpD4C,E,kLAGElF,KAAKtB,MAAMyG,cAAcnF,KAAKtB,MAAM0G,MAAMC,OAAOjE,M,kDAIjDpB,KAAKtB,MAAM4G,c,+BAKX,OACI,qBAAKnG,UAAU,OAAf,SACI,sBAAKA,UAAU,cAAf,UACI,oKACA,6QACEa,KAAKtB,MAAM6G,UAAYvF,KAAKtB,MAAMgE,KAAM,cAAC,EAAD,IACtC1C,KAAKtB,MAAM8G,WAAa,cAAC,EAAD,CACxBlD,QAAWtC,KAAKtB,MAAM4D,QACtBI,KAAS1C,KAAKtB,MAAMgE,KACpBI,SAAU9C,KAAKtB,MAAM4G,YAGrB,cAAC,EAAD,CACA/D,QAASvB,KAAKtB,MAAMgE,KAAK1C,KAAKtB,MAAMgG,gBAAgBnD,QACpDG,SAAY1B,KAAKtB,MAAMgE,KAAK1C,KAAKtB,MAAMgG,gBAAgBhD,SACvDE,oBAAuB5B,KAAKtB,MAAM4F,gBAClC3C,WAAc3B,KAAKtB,MAAMgE,KAAKG,OAC9BpB,aAAiBzB,KAAKtB,MAAMgG,eAAiB,EAC7ClE,MAAQR,KAAKtB,MAAM2F,uB,GA9BxB/D,aAiEJQ,mBArBf,SAA0BN,GACtB,MAAO,CACH8B,QAAS9B,EAAMkC,KAAKJ,QACpBkD,WAAahF,EAAMkC,KAAK8C,WACxBd,eAAiBlE,EAAMkC,KAAKgC,eAC5BL,YAAc7D,EAAMkC,KAAK2B,YACzB3B,KAAMlC,EAAMkC,KAAKA,KACjB6C,QAAS/E,EAAMkC,KAAK6C,YAK5B,SAA4Bf,GACxB,MAAO,CACHW,cAAgB,SAAC/D,GAAD,OAAQoD,GDxCFiB,ECwCyBrE,EDvCnD,uCAAO,WAAMoD,GAAN,iBAAAkB,EAAA,6DACHlB,EAASV,KADN,kBAIwBd,EAAM2C,IAAN,iBAAoBF,EAApB,UAJxB,OAIOG,EAJP,OAKOlD,EAAOkD,EAASC,KAEtBrB,EAASX,EAAiBnB,IAP3B,gDAUC8B,EAASP,EAAiB,EAAD,KAV1B,yDAAP,wDADG,IAAuBwB,GCyCtBnB,gBAAkB,SAAAC,GAAQ,OAAIC,EAASF,EAAgBC,KACvDe,UAAY,kBAAMd,EDuEf,CACHzC,KAAM2B,QCnEC5C,CAA4CoE,G,aCtE3D,SAASY,EAAT,GAAuD,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,eACjC,OAAQF,GAASE,GAAkBD,EAEvC,IAyBeE,GAzBD,SAAAxH,GACd,IAAMyH,EAAYzH,EAAMqD,MAAQ,OAC5BpD,EAAM,QACJyH,EAAO,UAAMD,EAAN,YAAmBE,KAAKC,UAMjC,OAJAR,EAAWpH,KACXC,GAAM,YAIF,sBAAKQ,UAAWR,EAAhB,UACG,uBAAOyH,QAASA,EAAhB,SAA2B1H,EAAM6H,QACjC,uBACKxE,KAAMoE,EACN/E,GAAIgF,EACJI,MAAO9H,EAAM8H,MACbC,SAAU/H,EAAM+H,WAGpBX,EAAWpH,GAAO,+BAAOA,EAAMgI,cAAgB,qIAAoC,S,MCUxF,SAASC,GAAWC,GACvB,OAAO,SAAApC,GACHM,YAAW,WACPN,EAASqC,QACJ,IAAND,IAKJ,SAASC,KAIZ,OAHAC,aAAaC,WAAW,SACxBD,aAAaC,WAAW,UACxBD,aAAaC,WAAW,kBACjB,CACHhF,KAAM6B,GAqBP,SAASoD,GAAYhG,GACxB,MAAO,CACHe,KAAO4B,EACP3C,S,ICtDFiG,G,4MAEFzG,MAAQ,CACJ0G,aAAa,EACbC,aAAe,CACXC,MAAM,CACFZ,MAAO,GACPzE,KAAM,QACNwE,MAAM,QACNG,aAAa,gHACbX,OAAO,EACPC,SAAQ,EACRqB,WAAY,CACRC,UAAS,EACTF,OAAM,IAGdG,SAAU,CACNf,MAAO,GACPzE,KAAM,WACNwE,MAAM,uCACNG,aAAa,+IACbX,OAAO,EACPC,SAAQ,EACRqB,WAAY,CACRC,UAAS,EACTE,WAAW,M,EAK3BC,aAAe,WACX,EAAK/I,MAAMqC,KACN,EAAKP,MAAM2G,aAAaC,MAAMZ,MAC9B,EAAKhG,MAAM2G,aAAaI,SAASf,OACjC,I,EAITkB,gBAAoB,WAChB,EAAKhJ,MAAMqC,KACP,EAAKP,MAAM2G,aAAaC,MAAMZ,MAC9B,EAAKhG,MAAM2G,aAAaI,SAASf,OACjC,I,EAIRmB,cAAgB,SAAAC,GACZA,EAAMC,kB,EA2BVC,gBAAkB,SAACF,EAAMG,GACrB,IAAMZ,EAAY,eAAO,EAAK3G,MAAM2G,cAC9Ba,EAAO,eAAOb,EAAaY,IACjCC,EAAQxB,MAAQoB,EAAMK,OAAOzB,MAC7BwB,EAAQhC,SAAU,EAElBgC,EAAQjC,MAAO,EAAKmC,gBAAgBF,EAAQxB,MAAQwB,EAAQX,YAC5DF,EAAaY,GAAeC,EAE5B,IAAId,GAAa,EAEjB9E,OAAOC,KAAK8E,GAAcgB,SAAQ,SAAAC,GAC9BlB,EAAcC,EAAaiB,GAAMrC,OAASmB,KAE9C,EAAKvG,SAAU,CACXwG,eAAcD,iB,8DAvCLV,EAAOa,GACpB,IAAIA,EACA,OAAO,EAGX,IA/DkBgB,EA+DdC,GAAU,EAed,OAbGjB,EAAWC,WACVgB,EAAyB,KAAjB9B,EAAM+B,QAAiBD,GAGhCjB,EAAWD,QACXkB,EAzEI,wJACDE,KAAKC,OAwEgBjC,GAxEFkC,gBAwEYJ,GAGlCjB,EAAWG,YACVc,EAxED,QAAQE,KAFOH,EA0EY7B,IAvE3B6B,EAAGxF,OAAS,GAuEyByF,GAIjCA,I,oCAyBG,IAAD,OAET,OAAOlG,OAAOC,KAAKrC,KAAKQ,MAAM2G,cAAc1H,KAAI,SAACsI,EAAapI,GAC1D,IAAMqI,EAAU,EAAKxH,MAAM2G,aAAaY,GACxC,OACI,cAAC,GAAD,CAEIhG,KAAMiG,EAAQjG,KACdyE,MAAOwB,EAAQxB,MACfT,MAAOiC,EAAQjC,MACfC,QAASgC,EAAQhC,QACjBO,MAAOyB,EAAQzB,MACfN,iBAAkB+B,EAAQX,WAC1BX,aAAesB,EAAQtB,aACvBD,SAAU,SAAAmB,GAAK,OAAI,EAAKE,gBAAgBF,EAAMG,KARzCA,EAAcpI,Q,+BAgB/B,OACI,qBAAKR,UAAU,OAAf,SACI,gCACI,oGACA,uBAAMwJ,SAAU3I,KAAK2H,cAAexI,UAAU,WAA9C,UACIa,KAAK4I,cACL,cAAC,EAAD,CACI7G,KAAK,UACL9C,QAASe,KAAKyH,aACdxF,UAAajC,KAAKQ,MAAM0G,YAH5B,4CAOA,cAAC,EAAD,CACInF,KAAK,UACL9C,QAASe,KAAK0H,gBACdzF,UAAajC,KAAKQ,MAAM0G,YAH5B,sI,GAnIL5G,aAyJJQ,mBAAQ,MANvB,SAA4B0D,GACxB,MAAO,CACHzD,KAAO,SAACqG,EAAOG,EAAUsB,GAAlB,OAA8BrE,EDrKtC,SAAc4C,EAAOG,EAAUsB,GAClC,8CAAO,WAAMrE,GAAN,uBAAAkB,EAAA,6DACGoD,EAAW,CACb1B,QACAG,WACAwB,mBAAmB,GAGnBC,EAAM,wGAENH,IACAG,EAAM,qHAVP,SAaoBhG,IAAMiG,KAAKD,EAAKF,GAbpC,OAaGlD,EAbH,OAeH3F,QAAQC,IAAI0F,EAASC,MAEfA,EAAOD,EAASC,KAEhBqD,EAAiB,IAAIC,MAAK,IAAIA,MAAOC,UAA6B,IAAjBvD,EAAKwD,WAE5DvC,aAAawC,QAAQ,QAASzD,EAAK0D,SACnCzC,aAAawC,QAAQ,SAAUzD,EAAK2D,SACpC1C,aAAawC,QAAQ,iBAAkBJ,GAEvC1E,EAASwC,GAAYnB,EAAK0D,UAC1B/E,EAASmC,GAAWd,EAAKwD,YA1BtB,4CAAP,sDCoKkDtI,CAAKqG,EAAOG,EAASsB,QAI5D/H,CAAmCmG,I,eC5K3C,SAASwC,GAAcC,EAAQrC,GAClC,OAAO,2BACAqC,GADP,IAEIrC,aACAtB,OAAQsB,EACRrB,SAAS,EACTQ,MAAO,KAGR,SAASmD,GAAWnD,GAA0B,IAAnBa,EAAkB,uDAAN,KACzC,IAAKA,EACD,OAAO,EAEX,IAAIiB,GAAU,EAKd,OAHIjB,EAAWC,WACXgB,EAA2B,KAAjB9B,EAAM+B,QAAiBD,GAE9BA,EAEL,SAASsB,GAAczC,GAC1B,IAAID,GAAc,EAElB,IAAK,IAAIc,KAAWb,EACZA,EAAa0C,eAAe7B,KAC5Bd,EAAcC,EAAaa,GAASjC,OAASmB,GAGrD,OAAOA,EC5BX,IACe4C,GADG,SAAApL,GAAK,OAAIA,EAAMmC,UC8BlBkJ,I,MA3BA,SAAArL,GAEX,IAAM0H,EAAO,UAAM1H,EAAM6H,MAAZ,aAAsBF,KAAKC,UACxC,OACI,sBAAKnH,UAAU,SAAf,UACI,uBAAOiH,QAASA,EAAhB,SAA0B1H,EAAM6H,QAChC,wBACInF,GAAIgF,EACJI,MAAO9H,EAAM8H,MACbC,SAAU/H,EAAM+H,SAHpB,SAKK/H,EAAMsL,QAAQvK,KAAI,SAACwK,EAAOtK,GACvB,OACI,wBACI6G,MAAOyD,EAAOzD,MADlB,SAIKyD,EAAO5I,MAFH4I,EAAOzD,MAAQ7G,aCThD,SAASuK,GAAoBnF,GACzB,OAAO0E,GAAa,CAChBlD,MAAM,8CAAD,OAAaxB,GAClB2B,aAAc,6JACdtF,GAAI2D,GACL,CAACuC,UAAU,IAGlB,SAAS6C,KACL,MAAO,CACHzI,SAAU+H,GAAa,CACnBlD,MAAO,kFACPG,aAAc,kJACf,CAACY,UAAU,IACd8C,QAASF,GAAmB,GAC5BG,QAASH,GAAmB,GAC5BI,QAASJ,GAAmB,GAC5BK,QAASL,GAAmB,IAG7B,IAgJQM,GAhJf,4MAEIhK,MAAQ,CACJkC,KAAM,GACNyE,aAAagD,KACbjD,aAAa,EACbvC,cAAgB,GANxB,EASIgD,cAAc,SAACC,GACXA,EAAMC,kBAVd,EAYI4C,mBAAqB,SAAA7C,GACjBA,EAAMC,iBACN,IAAMnF,EAAI,aAAO,EAAKlC,MAAMkC,MACtB/C,EAAQ+C,EAAKG,OAAQ,EAHD,EAK0B,EAAKrC,MAAM2G,aAAxDzF,EALmB,EAKnBA,SAAU0I,EALS,EAKTA,QAAQC,EALC,EAKDA,QAAQC,EALP,EAKOA,QAAQC,EALf,EAKeA,QACnCG,EAAe,CACjBhJ,SAASA,EAAS8E,MAClBpF,GAAKzB,EACLgF,cAAe,EAAKnE,MAAMmE,cAC1BpD,QAAU,CACN,CAACF,KAAM+I,EAAQ5D,MAAOpF,GAAIgJ,EAAQhJ,IAClC,CAACC,KAAMgJ,EAAQ7D,MAAOpF,GAAIiJ,EAAQjJ,IAClC,CAACC,KAAMiJ,EAAQ9D,MAAOpF,GAAIkJ,EAAQlJ,IAClC,CAACC,KAAMkJ,EAAQ/D,MAAOpF,GAAImJ,EAAQnJ,MAG1CnB,QAAQC,IAAIwK,EAAanJ,SACzBmB,EAAKtC,KAAKsK,GACV,EAAK/J,SAAS,CACV+B,OACAyE,aAAagD,KACbjD,aAAa,EACbvC,cAAgB,KAnC5B,EAuCIgG,iBAvCJ,uCAuCsB,WAAM/C,GAAN,SAAAlC,EAAA,6DACdkC,EAAMC,iBADQ,kBAIH7E,EAAMiG,KAAK,cAAe,EAAKzI,MAAMkC,MAJlC,OAMV,EAAK/B,SAAS,CACV+B,KAAM,GACNyE,aAAagD,KACbjD,aAAa,EACbvC,cAAgB,IAVV,gDAcV1E,QAAQC,IAAR,MAdU,yDAvCtB,wDA0DI0K,cAAgB,SAACpE,EAAOuB,GACvB,IAAMZ,EAAY,eAAO,EAAK3G,MAAM2G,cAC9Ba,EAAO,eAAOb,EAAaY,IAEjCC,EAAQhC,SAAU,EAClBgC,EAAQxB,MAAQA,EAChBwB,EAAQjC,MAAQ4D,GAAU3B,EAAQxB,MAAOwB,EAAQX,YAGjDF,EAAaY,GAAeC,EAE5B,EAAKrH,SAAS,CACVwG,eACAD,YAAc0C,GAAazC,MAvEpC,EA2EI0D,eAAiB,WACb,OAAOzI,OAAOC,KAAK,EAAK7B,MAAM2G,cAAc1H,KAAI,SAACsI,EAAapI,GAC1D,IAAMqI,EAAU,EAAKxH,MAAM2G,aAAaY,GACxC,OAEI,eAAC,GAAD,WACI,cAAC,GAAD,CAEIxB,MAAOyB,EAAQzB,MACfC,MAAOwB,EAAQxB,MACfT,MAAOiC,EAAQjC,MACfE,iBAAoB+B,EAAQX,WAC5BrB,QAASgC,EAAQhC,QACjBU,aAAesB,EAAQtB,aACvBD,SAAU,SAAAmB,GAAK,OAAG,EAAKgD,cAAchD,EAAMK,OAAOzB,MAAOuB,MAElD,IAAVpI,EAAc,uBAAQ,OAXVA,EAAQoI,OAhFzC,EAgGI+C,oBAAsB,SAAClD,GACnB,EAAKjH,SAAS,CACVgE,eAAiBiD,EAAMK,OAAOzB,SAlG1C,uDAuGQ,IAAMuE,EAAS,cAAC,GAAD,CACXxE,MAAM,+IACNC,MAASxG,KAAKQ,MAAMmE,cACpB8B,SAAYzG,KAAK8K,oBACjBd,QAAW,CACP,CAAC3I,KAAM,EAAImF,MAAQ,GACnB,CAACnF,KAAM,EAAImF,MAAQ,GACnB,CAACnF,KAAM,EAAImF,MAAQ,GACnB,CAACnF,KAAM,EAAImF,MAAQ,MAG3B,OACK,qBAAKrH,UAAU,cAAf,SACI,gCACI,iHACA,oSACA,uBAAMwJ,SAAU3I,KAAK2H,cAArB,UACK3H,KAAK6K,iBACLE,EACD,cAAC,EAAD,CACAhJ,KAAK,UACL9C,QAASe,KAAKyK,mBACdxI,UAAWjC,KAAKQ,MAAM0G,YAHtB,mGAOA,cAAC,EAAD,CACInF,KAAK,UACL9C,QAASe,KAAK2K,iBACd1I,SAAqC,IAA3BjC,KAAKQ,MAAMkC,KAAKG,OAH9B,yGAjIzB,GAAiCvC,aCtBpB0K,I,MAAb,6KAGY,OAAOhL,KAAKtB,MAAMsF,OAAOvE,KAAI,SAAAiD,GACzB,OACI,6BACI,cAAC,IAAD,CAAS9C,GAAI,SAAW8C,EAAKtB,GAA7B,SACKsB,EAAK0F,QAFL1F,EAAKtB,SALlC,0CAeSpB,KAAKtB,MAAMuM,gBAfpB,+BAkBQ,OACK,qBAAK9L,UAAU,WAAf,SACI,gCACK,2GACCa,KAAKtB,MAAMwM,QAAU,cAAC,EAAD,KAA0C,IAA7BlL,KAAKtB,MAAMsF,OAAOmH,OACrD,6BACMnL,KAAKoL,0BAxBjC,GAA8B9K,cA8CfQ,oBAbf,SAA0BN,GACtB,MAAO,CACHwD,OAASxD,EAAMkC,KAAKsB,OACpBkH,QAAU1K,EAAMkC,KAAKwI,YAI7B,SAA6B1G,GACzB,MAAO,CACHyG,YAAa,kBAAMzG,ET5CvB,uCAAO,WAAMA,GAAN,iBAAAkB,EAAA,6DACHlB,EAASV,KADN,kBAG4Bd,EAAM2C,IAAI,eAHtC,OAGWC,EAHX,OAKW5B,EAAS,GAEf5B,OAAOC,KAAKuD,EAASC,MAAMsC,SAAS,SAAC1F,EAAK9C,GACtCqE,EAAO5D,KAAK,CACRgB,GAAIqB,EACJ2F,KAAK,kCAAD,OAAUzI,EAAM,QAG5B6E,EAAST,EAAmBC,IAbjC,kDAeQQ,EAASP,EAAiB,EAAD,KAfjC,0DAAP,2DSgDWnD,CAA6CkK,IC/CtDK,G,kLAEErL,KAAKtB,MAAMmI,W,+BAIX,OAAO,cAAC,IAAD,CAAUjH,GAAI,U,GANRU,aAkBNQ,mBAAQ,MANvB,SAA4B0D,GACxB,MAAO,CACHqC,OAAS,kBAAMrC,EAASqC,UAIjB/F,CAAkCuK,ICX3CC,G,kLAGFtL,KAAKtB,MAAM6M,c,+BAGX,IAAIC,EACF,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,QAAQC,UAAWzE,KAC/B,cAAC,IAAD,CAAOwE,KAAK,YAAYC,UAAWxG,IACnC,cAAC,IAAD,CAAOuG,KAAK,IAAI5L,OAAK,EAAC6L,UAAWV,KACjC,cAAC,IAAD,CAAUpL,GAAI,SAgBpB,OAZII,KAAKtB,MAAMyB,kBACbqL,EACE,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,gBAAgBC,UAAWlB,KACvC,cAAC,IAAD,CAAOiB,KAAK,YAAYC,UAAWxG,IACnC,cAAC,IAAD,CAAOuG,KAAK,UAAUC,UAAYL,KAClC,cAAC,IAAD,CAAOI,KAAK,IAAI5L,OAAK,EAAC6L,UAAWV,KACjC,cAAC,IAAD,CAAUpL,GAAI,UAMpB,cAAC,EAAD,UACG4L,Q,GA7BSlL,aA8CHqL,mBAAY7K,aAX3B,SAA0BN,GACxB,MAAO,CACLL,kBAAoBK,EAAMO,KAAKC,UAGnC,SAA6BwD,GAC3B,MAAO,CACL+G,UAAY,kBAAM/G,GRDX,SAAAA,GACH,IAAMxD,EAAQ8F,aAAa8E,QAAQ,SACnC,GAAI5K,EAEE,CACF,IAAM6K,EAAiB,IAAI1C,KAAKrC,aAAa8E,QAAQ,mBACjDC,GAAkB,IAAI1C,KACtB3E,EAASqC,OAETrC,EAASwC,GAAYhG,IACrBwD,EAASmC,IAAYkF,EAAezC,WAAY,IAAID,MAAOC,WAAa,YAP5E5E,EAASqC,aQEM/F,CAA8CwK,K,SCzDnEQ,GAAe,CACjB9K,MAAO,MCAX,IAAM8K,GAAe,CACjB9H,OAAS,GACTkH,SAAU,EACV/G,MAAO,KACP7B,QAAS,GACTkD,YAAa,EACbd,eAAiB,EACjBL,YAAc,KACd3B,KAAM,MCLKqJ,oBAAiB,CAC5BrJ,KDQW,WAAqD,IAA/BlC,EAA8B,uDAAtBsL,GAAcE,EAAQ,uCAE/D,OAAOA,EAAOjK,MACV,KAAKoB,EACL,OAAO,2BACA3C,GADP,IACc0K,SAAU,IAExB,KAAK9H,EACL,OAAO,2BACA5C,GADP,IACc0K,SAAS,EAAOlH,OAAQgI,EAAOhI,SAE7C,KAAKX,EACL,OAAO,2BACA7C,GADP,IACc0K,SAAS,EAAO/G,MAAO6H,EAAO7H,QAE5C,KAAKb,EACL,OAAO,2BACA9C,GADP,IACc+E,SAAS,EAAQ7C,KAAMsJ,EAAOtJ,OAE5C,KAAKa,EACL,OAAO,2BACA/C,GADP,IACc6D,YAAa2H,EAAO3H,YAAa/B,QAAU0J,EAAO1J,UAEhE,KAAKkB,EACL,OAAO,2BACAhD,GADP,IACcgF,YAAY,IAE1B,KAAK/B,EACL,OAAO,2BACAjD,GADP,IACc6D,YAAa,KAAOK,eAAgBsH,EAAOjH,SAEzD,KAAKrB,EACD,OAAO,2BACAlD,GADP,IAEI8B,QAAS,GACTkD,YAAa,EACbd,eAAiB,EACjBL,YAAc,OAEtB,QACA,OAAO7D,IC/CXO,KFFW,WAAmD,IAA9BP,EAA6B,uDAAtBsL,GAAcE,EAAQ,uCAC7D,OAAOA,EAAOjK,MACV,KAAK4B,EACD,kCACOnD,GADP,IACeQ,MAAOgL,EAAOhL,QAEjC,KAAK4C,EACD,OAAO,2BACApD,GADP,IACcQ,MAAO,OAEzB,QACA,OAAOR,M,SGNTyL,GACc,kBAAXpH,QACPA,OAAOqH,qCACLrH,OAAOqH,qCAAqC,IACvCC,KAEHC,GAAQC,aACVC,GACAL,GAAiBM,aAAgBC,QAI/BC,GACF,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACI,cAAC,IAAD,UACI,cAAC,GAAD,QAKZM,IAASC,OAAOF,GAAIG,SAASC,eAAe,W","file":"static/js/main.860e5b42.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars, faTimes} from '@fortawesome/free-solid-svg-icons';\r\nimport './MenuToglle.css';\r\n\r\nconst MenuToggle = (props) => {\r\n    let cls = 'MenuToglle';\r\n\r\n    if (props.isOpen){\r\n        cls += ' open';\r\n    }\r\n\r\n    const icons = props.isOpen? faTimes : faBars ;\r\n    return (\r\n\r\n        <FontAwesomeIcon icon={icons} onClick={props.onToggle} className={cls}/>\r\n    )\r\n}\r\nexport default MenuToggle;","import React from 'react'\r\nimport './Backdrop.css'\r\n\r\nconst Backdrop = props => <div className='Backdrop' onClick={props.onClick}/>\r\n\r\nexport default Backdrop;","import React, { Component } from 'react' \r\nimport {NavLink} from 'react-router-dom';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop'\r\nimport './Drawer.css';\r\n\r\nclass Drawer extends Component {\r\n    clickHandel =() => {\r\n        this.props.onClose()\r\n    }\r\n    renderLinks(links){\r\n        return  links.map((link, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    <NavLink\r\n                        to={link.to}\r\n                        exact={link.exact}\r\n                        activeClassName=\" active\"\r\n                        onClick={this.clickHandel}\r\n                    >\r\n                        {link.lable}\r\n                        \r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n    render () {\r\n        let cls = 'Drawer';\r\n        if ( !this.props.isOpen){\r\n            cls += '  close'\r\n        }\r\n\r\n        const links = [\r\n            {to:\"/\" , lable:\"список\", exact: true}\r\n        ]\r\n\r\n        console.log(this.props.isAuthenticated);\r\n        if (this.props.isAuthenticated){\r\n            links.push( {to:\"/quiz-creator\" , lable:\"Создавать тест\", exact: false})\r\n            links.push( {to:\"/logout\" , lable:\"Выйти\", exact: false})\r\n\r\n        }else {\r\n        links.push( {to:\"/auth\" , lable:\"Авторизация\", exact: false},)\r\n        }\r\n\r\n\r\n        return (\r\n            <>\r\n            <nav className={cls}>\r\n                <ul>\r\n                    {this.renderLinks(links)}\r\n                </ul>\r\n\r\n            </nav>\r\n            {this.props.isOpen? <Backdrop onClick={this.props.onClose}/> : null}\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default Drawer;","import React, {Component} from 'react';\r\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle'\r\nimport Drawer from '../../components/Navigation/Drawer/Drawer'\r\nimport './layout.css';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Layout extends Component {\r\n\r\n    state={\r\n        menu: false\r\n    }\r\n    toggleMenu = () => {\r\n        this.setState({\r\n            menu : !this.state.menu \r\n        })\r\n    }\r\n    menuCloseHandler= () => {\r\n        this.setState({\r\n            menu: false\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='layout'>\r\n                <Drawer\r\n                 isOpen={this.state.menu}\r\n                 onClose={this.menuCloseHandler}\r\n                 isAuthenticated={this.props.isAuthenticated}\r\n                />\r\n                <MenuToggle\r\n                onToggle={this.toggleMenu}\r\n                isOpen={this.state.menu}\r\n                />\r\n                <main >\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isAuthenticated : !!state.auth.token\r\n    }\r\n}\r\nexport default connect(mapStateToProps) (Layout);\r\n","import React from 'react' ;\r\nimport './AnswersItem.css';\r\n\r\nconst AnswersItem = (props) => {\r\n\r\n    // const cls = ['AnswersItem'];\r\n    let cls = 'AnswersItem ';\r\n\r\n    if (props.state) {\r\n        // cls.push(props.state)\r\n        cls += props.state;\r\n    } \r\n    \r\n    return (\r\n        <li \r\n            // className= {cls.join(' ')} \r\n            className= {cls} \r\n            onClick={() => props.onClickAnswer (props.answer.id)}\r\n            >\r\n                \r\n            {props.answer.text}\r\n            \r\n\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default AnswersItem; ","import React from 'react';\r\nimport AnswersItem from './AnswersItem/AnswersItem';\r\n\r\nimport './AnswersList.css';\r\n\r\nconst AnswersList = props => (\r\n    <ul className='AnswersList'>\r\n        \r\n        {props.answers.map((answer, index) => {\r\n           \r\n           return (\r\n               <AnswersItem \r\n               key = {index}\r\n               answer={answer}\r\n               onClickAnswer = {props.onClickAnswer}\r\n               state ={props.state ? props.state[answer.id] : null}\r\n               />\r\n            ) \r\n\r\n        })}\r\n    </ul>\r\n)\r\n\r\nexport default AnswersList; ","import React from 'react';\r\nimport AnswersList from './AnswersList/AnswersList';\r\nimport './ActiveQuiz.css';\r\n\r\nconst ActiveQuiz = props => {\r\n    return (\r\n        <div className='ActiveQuiz'>\r\n            <p className='question'> \r\n                <span>\r\n                    <strong>{props.answerNumber}.</strong>&nbsp;\r\n                    {props.question}\r\n                </span>\r\n                <small> {props.answerNumber} из {props.quizLength}</small>\r\n            </p>\r\n            <AnswersList \r\n                state={props.state}\r\n                answers={props.answers}\r\n                onClickAnswer = {props.onAnswerClickHandel}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default ActiveQuiz;","import React from 'react' ;\r\nimport './Button.css';\r\n\r\nconst Button = (props) => {\r\n    const clc = [\r\n        'Button',\r\n        [props.type]\r\n    ]\r\n    return (\r\n        <button\r\n            onClick={props.onClick}\r\n            className={clc.join(' ')}\r\n            disabled={props.disabled}\r\n\r\n        >\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport Button from '../UI/Button/Button'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faTimes} from '@fortawesome/free-solid-svg-icons';\r\nimport {Link} from 'react-router-dom';\r\nimport './success.css';\r\n\r\n\r\nconst Finish = (props) => {\r\n    const successCount = Object.keys(props.results).reduce((total, key) => {\r\n        if (props.results[key] === 'Success'){\r\n            total ++\r\n        }\r\n        return total \r\n\r\n    }, 0)\r\n    return (\r\n        <div className='finished'>\r\n           <ul>\r\n               {props.quiz.map((quizItem, index) => {\r\n                   const icons = (props.results[quizItem.id]) === 'error' ? faTimes : faCheck ;\r\n                   const clc = [\r\n                       'margin',\r\n                       props.results[quizItem.id] === 'error' ? 'error' : 'Success'\r\n                    ]\r\n                    \r\n                   return (\r\n                       <li \r\n                        key={index}\r\n                       >\r\n                           <strong>{index + 1} </strong>. &nbsp;\r\n                           {quizItem.question}\r\n                           <FontAwesomeIcon icon={icons} className={clc.join(' ')} />\r\n                       </li>\r\n                       \r\n                   )\r\n               })}\r\n               \r\n           </ul>\r\n           <p> правильно {successCount} из {props.quiz.length}</p>\r\n           <div>\r\n               <Button onClick={props.onReplay} type=\"primary\">Повторить</Button>\r\n               <Link to='/'>\r\n                    <Button  type=\"success\">Перейти в список тестов</Button>\r\n               </Link>\r\n           </div> \r\n           \r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Finish;","import React from 'react';\r\nimport './loader.css';\r\n\r\n const Loader = props => {\r\n     return (\r\n         <div className=\"center\">\r\n            <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n        </div>\r\n     )\r\n\r\n}\r\nexport default Loader;","import axios from 'axios' ;\r\nexport default axios.create({\r\n    baseURL: 'https://react-quiz-cb1f1-default-rtdb.firebaseio.com/'\r\n})","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START',\r\n             FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS',\r\n             FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR',\r\n             FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS',\r\n             QUIZ_SET_STATE = 'QUIZ_SET_STATE',\r\n             FINISH_QUIZ = 'FINISH_QUIZ',\r\n             QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION',\r\n             QUIZ_RETRY = 'QUIZ_RETRY',\r\n             AUTH_SUCCESS ='AUTH_SUCCESS',\r\n             AUTH_LOGOUT ='AUTH_LOGOUT';\r\n\r\n","import axios from '../../axios/axios'\r\nimport {FETCH_QUIZES_START, FETCH_QUIZES_SUCCESS, FETCH_QUIZES_ERROR, FETCH_QUIZ_SUCCESS, QUIZ_SET_STATE, FINISH_QUIZ, QUIZ_NEXT_QUESTION, QUIZ_RETRY\r\n} from './actionsTypes'\r\n\r\nexport function fetchQuizes() {\r\n    return async dispatch => {\r\n        dispatch(fetchQuizesStart())\r\n        try {\r\n                const response = await axios.get('quizes.json')\r\n        \r\n                const quizes = []\r\n        \r\n                Object.keys(response.data).forEach( (key, index) => {\r\n                    quizes.push({\r\n                        id: key,\r\n                        name:`Тест №${index+1}`\r\n                    })\r\n                })\r\n                dispatch(fetchQuizesSuccess(quizes))\r\n               }catch(e){\r\n                   dispatch(fetchQuizesError(e))\r\n               }\r\n\r\n    }\r\n}\r\n\r\nexport function fetchQuizById(quizId) {\r\n    return async dispatch => {\r\n        dispatch(fetchQuizesStart())\r\n     \r\n        try {\r\n            const response = await axios.get(`quizes/${quizId}.json`)\r\n            const quiz = response.data\r\n            \r\n            dispatch(fetchQuizSuccess(quiz))\r\n\r\n        }catch(e){\r\n            dispatch(fetchQuizesError(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchQuizSuccess(quiz) {\r\n    return {\r\n        type: FETCH_QUIZ_SUCCESS,\r\n        quiz\r\n    }\r\n}\r\n\r\nexport function fetchQuizesStart() {\r\n    return {\r\n        type : FETCH_QUIZES_START \r\n    }\r\n}\r\n\r\nexport function fetchQuizesSuccess(quizes) {\r\n    return{\r\n        type : FETCH_QUIZES_SUCCESS,\r\n        quizes\r\n    }\r\n}\r\n\r\nexport function fetchQuizesError(e) {\r\n    return {\r\n        type : FETCH_QUIZES_ERROR,\r\n        error: e \r\n    }\r\n}\r\n\r\nexport function quizSetState(answerState, results) {\r\n    return {\r\n        type: QUIZ_SET_STATE ,\r\n        answerState, results\r\n    }\r\n}\r\n\r\nexport function finishQuiz (){\r\n    return {\r\n        type : FINISH_QUIZ\r\n    }    \r\n}\r\n\r\nexport function quizNextQuestiom(number) {\r\n    return{\r\n        type: QUIZ_NEXT_QUESTION,\r\n        number\r\n    }\r\n    \r\n}\r\nexport function isQuizFinished(state) {\r\n    return state.activeQuestion +1 === state.quiz.length\r\n}\r\n\r\nexport function quizAnswerClick(answerId) { \r\n    return (dispatch, getState) => {\r\n\r\n        const state = getState().quiz\r\n\r\n        if (state.answerState) {\r\n            const key = Object.keys(state.answerState)[0];\r\n            if (state.answerState[key] === 'Success'){\r\n                return \r\n            }\r\n        }\r\n    \r\n        const question = state.quiz[state.activeQuestion] ;\r\n        const results = state.results;\r\n\r\n        if (question.rightAnswerId === answerId) {\r\n            \r\n            if ( !results[question.id] ){\r\n                results[question.id] = 'Success';\r\n            }\r\n\r\n            dispatch(quizSetState({ [answerId]: 'Success'}, results))\r\n           \r\n            const timeOut = window.setTimeout( () => { \r\n                if (isQuizFinished(state)){\r\n                    dispatch(finishQuiz())\r\n                \r\n                }else {\r\n                    dispatch(quizNextQuestiom(state.activeQuestion + 1))\r\n                }\r\n            \r\n                window.clearTimeout(timeOut);\r\n\r\n            }, 1000)\r\n            \r\n\r\n        }else {\r\n            \r\n            results[question.id] = 'error';\r\n            dispatch(quizSetState({ [answerId]: 'error'}, results))\r\n            \r\n        }       \r\n    }\r\n}\r\n\r\nexport function retryQuiz() {\r\n    return {\r\n        type: QUIZ_RETRY,\r\n\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz'\r\nimport Finish from '../../components/success/Success';\r\nimport Loader from '../../components/UI/loader/loader'\r\nimport './Quiz.css';\r\nimport { connect } from 'react-redux';\r\nimport { fetchQuizById, quizAnswerClick, retryQuiz } from '../../store/actions/quiz';\r\n\r\nclass Quiz extends Component {\r\n\r\n   componentDidMount () {\r\n        this.props.fetchQuizById(this.props.match.params.id);\r\n    }\r\n\r\n    UNSAFE_componentWillMount(){\r\n        this.props.retryQuiz()\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className='Quiz'>\r\n                <div className='QuizWrapper'>\r\n                    <h1>Ответьете на все вопросы </h1> \r\n                    <h3 >Внимание! Только первый ответ будет засчитан </h3>\r\n                    { this.props.loading || !this.props.quiz? <Loader/> :\r\n                        this.props.isFinished ? <Finish\r\n                        results = {this.props.results}\r\n                        quiz = { this.props.quiz}\r\n                        onReplay={this.props.retryQuiz}\r\n                        /> \r\n                        : \r\n                        <ActiveQuiz \r\n                        answers={this.props.quiz[this.props.activeQuestion].answers}\r\n                        question = {this.props.quiz[this.props.activeQuestion].question}\r\n                        onAnswerClickHandel = {this.props.quizAnswerClick}\r\n                        quizLength = {this.props.quiz.length}\r\n                        answerNumber = { this.props.activeQuestion + 1}\r\n                        state= {this.props.answerState}\r\n                        \r\n                        />\r\n                    }\r\n                   \r\n                </div>\r\n                \r\n\r\n            </div>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        results: state.quiz.results,\r\n        isFinished : state.quiz.isFinished,\r\n        activeQuestion : state.quiz.activeQuestion,\r\n        answerState : state.quiz.answerState,\r\n        quiz: state.quiz.quiz,\r\n        loading: state.quiz.loading\r\n    \r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchQuizById : (id) => dispatch(fetchQuizById(id)),\r\n        quizAnswerClick : answerId => dispatch(quizAnswerClick(answerId)),\r\n        retryQuiz : () => dispatch(retryQuiz())\r\n    }\r\n    \r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Quiz); ","import React from 'react';\r\nimport './Input.css';\r\n\r\nfunction isInvalid ({valid, touched, shouldValidate}) {\r\n    return !valid && shouldValidate && touched\r\n}\r\nconst Input = props => {\r\nconst inputType = props.type || 'text';\r\nlet cls = 'Input';\r\nconst htmlFor = `${inputType}-${Math.random()}`;\r\n\r\nif( isInvalid (props)){\r\n    cls+= ' invalid'\r\n}\r\n\r\n    return (\r\n        <div className={cls}>\r\n           <label htmlFor={htmlFor} >{props.label}</label>\r\n           <input \r\n                type={inputType}\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n\r\n           /> \r\n           {isInvalid (props)?<span>{props.errorMessage || 'Введите верное значение'}</span> : null }\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input; ","import axios from 'axios';\r\nimport {AUTH_SUCCESS, AUTH_LOGOUT} from './actionsTypes'\r\n\r\nexport function auth(email, password, isLogin) {\r\n    return async dispatch => {\r\n        const authData = {\r\n            email,\r\n            password ,\r\n            returnSecureToken: true\r\n        }\r\n\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAvQ-NJAOJQdvjh68GiQYC6IOuduFlmMa8' ;\r\n\r\n        if (isLogin){\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAvQ-NJAOJQdvjh68GiQYC6IOuduFlmMa8'; \r\n        }\r\n\r\n        const response = await axios.post(url, authData)\r\n\r\n        console.log(response.data);\r\n\r\n        const data = response.data;\r\n\r\n        const expirationData = new Date(new Date().getTime() + data.expiresIn * 1000)\r\n\r\n        localStorage.setItem('token', data.idToken);\r\n        localStorage.setItem('userId', data.localId);\r\n        localStorage.setItem('expirationData', expirationData);\r\n\r\n        dispatch(authSuccess(data.idToken));\r\n        dispatch(authLogout(data.expiresIn))\r\n\r\n    }\r\n}\r\n\r\nexport function authLogout(time) {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout())\r\n        }, time* 1000)\r\n    }\r\n    \r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('userId');\r\n    localStorage.removeItem('expirationData');\r\n    return {\r\n        type: AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport function authLogin () {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token')\r\n        if(!token) {\r\n            dispatch(logout())\r\n        }else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationData'))\r\n            if (expirationDate <= new Date()){\r\n                dispatch(logout())\r\n            }else {\r\n                dispatch(authSuccess(token));\r\n                dispatch(authLogout((expirationDate.getTime() - new Date().getTime()) / 1000 ))\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function authSuccess(token) {\r\n    return {\r\n        type : AUTH_SUCCESS,\r\n        token\r\n    }\r\n    \r\n}","import React, { Component } from 'react'\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Input from '../../components/UI/Input/Input'\r\nimport './Auth.css';\r\nimport { connect } from 'react-redux';\r\nimport { auth } from '../../store/actions/authAction';\r\n\r\n\r\nfunction validateEmail(email) {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\nfunction validatePassword(pw) {\r\n\r\n    return /[0-9]/.test(pw) &&\r\n           pw.length > 4;\r\n          \r\n}\r\n\r\nclass Auth extends Component {\r\n\r\n    state = {\r\n        isFormValid: false,\r\n        formControls : {\r\n            email:{\r\n                value: '',\r\n                type: 'email',\r\n                label:'Email',\r\n                errorMessage:'Введите корректный Email',\r\n                valid: false,\r\n                touched:false,\r\n                validation: {\r\n                    required:true,\r\n                    email:true\r\n                }\r\n            },\r\n            password: {\r\n                value: '',\r\n                type: 'password',\r\n                label:'Пароль',\r\n                errorMessage:'Введите корректный Пароль',\r\n                valid: false,\r\n                touched:false,\r\n                validation: {\r\n                    required:true,\r\n                    minLength: true\r\n                }\r\n            }\r\n        }\r\n    }\r\n    loginHandler = () => {\r\n        this.props.auth(\r\n             this.state.formControls.email.value, \r\n             this.state.formControls.password.value,\r\n             true\r\n        )\r\n    }\r\n    \r\n    registerHandler =   () => {\r\n        this.props.auth(\r\n            this.state.formControls.email.value, \r\n            this.state.formControls.password.value,\r\n            false\r\n       )\r\n    }\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    validateControl (value, validation){\r\n        if(!validation){\r\n            return true\r\n        }\r\n\r\n        let isValid = true;\r\n        \r\n        if(validation.required){\r\n            isValid=value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if(validation.email){\r\n           isValid = validateEmail(value) && isValid\r\n        }\r\n\r\n        if(validation.minLength){\r\n            isValid= validatePassword(value) && isValid\r\n            \r\n        }\r\n\r\n        return isValid;\r\n\r\n    }\r\n\r\n    onChangeHandler = (event,controlName) => {\r\n        const formControls = {...this.state.formControls};\r\n        const control = {...formControls[controlName]};\r\n        control.value = event.target.value;\r\n        control.touched = true;\r\n        \r\n        control.valid =this.validateControl(control.value , control.validation)\r\n        formControls[controlName] = control;\r\n        \r\n        let isFormValid =true;\r\n\r\n        Object.keys(formControls).forEach(name => {\r\n            isFormValid = formControls[name].valid && isFormValid;\r\n        })\r\n        this.setState ({\r\n            formControls, isFormValid\r\n        })\r\n        \r\n\r\n    }\r\n\r\n    renderInput(){\r\n        \r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName];\r\n            return (\r\n                <Input\r\n                    key={controlName + index}\r\n                    type={control.type}\r\n                    value={control.value}\r\n                    valid={control.valid}\r\n                    touched={control.touched}\r\n                    label={control.label}\r\n                    shouldValidate={!!control.validation}\r\n                    errorMessage ={control.errorMessage}\r\n                    onChange={event => this.onChangeHandler(event,controlName)}\r\n                />\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className='Auth'>\r\n                <div>\r\n                    <h1>Авторизация</h1>\r\n                    <form onSubmit={this.submitHandler} className='AuthForm'>\r\n                       {this.renderInput()}\r\n                        <Button \r\n                            type=\"success\" \r\n                            onClick={this.loginHandler}\r\n                            disabled = {!this.state.isFormValid}\r\n                        >\r\n                            Войти\r\n                        </Button>\r\n                        <Button \r\n                            type=\"primary\" \r\n                            onClick={this.registerHandler}\r\n                            disabled = {!this.state.isFormValid}\r\n                            \r\n                        >\r\n                            Зарегистрироваться\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        auth : (email, password, isLogin) => dispatch(auth(email, password,isLogin))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps) (Auth)\r\n\r\n","export function creatControl (config, validation) {\r\n    return {\r\n        ...config,\r\n        validation,\r\n        valid:! validation,\r\n        touched: false,\r\n        value: ''\r\n    }\r\n}\r\nexport function validate ( value, validation= null) {\r\n     if (!validation) {\r\n         return true;\r\n     }\r\n     let isValid = true;\r\n\r\n     if (validation.required){\r\n         isValid = value.trim() !== '' && isValid;\r\n     }\r\n     return isValid;\r\n}\r\nexport function validateForm (formControls) {\r\n    let isFormValid = true;\r\n    \r\n    for (let control in formControls) {\r\n        if (formControls.hasOwnProperty(control)){\r\n            isFormValid = formControls[control].valid && isFormValid;\r\n        }\r\n    }\r\n    return isFormValid; \r\n}","const Auxiliary = props => props.children \r\nexport default Auxiliary;","import React from 'react';\r\nimport './Select.css';\r\n\r\nconst Select = props => {\r\n\r\n    const htmlFor = `${props.label}- ${Math.random()}`;\r\n    return (\r\n        <div className=\"Select\">\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <select\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            >\r\n                {props.options.map((option,index) => {\r\n                    return (\r\n                        <option\r\n                            value={option.value}\r\n                            key={option.value + index}\r\n                        >\r\n                            {option.text}\r\n                        </option>\r\n                    )\r\n                })}\r\n            </select>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Select;","import React, { Component } from 'react';\r\nimport './QuizCreator.css';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport {creatControl, validate, validateForm} from '../../Form/Form';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Auxiliary from '../../hos/Auxiliyar/Auxiliary';\r\nimport Select from '../../components/UI/Select/Select';\r\nimport axios from '../../axios/axios';\r\n\r\nfunction creatOptionControl (number) {\r\n    return creatControl({\r\n        label: `Вариант ${number}`,\r\n        errorMessage: 'значение не может быть пустым',\r\n        id: number \r\n    }, {required: true})\r\n}\r\n\r\nfunction creatFormControl () {\r\n    return {\r\n        question: creatControl({\r\n            label: 'Введите вопрос',\r\n            errorMessage: 'Вопрос не может быть пустым'\r\n        }, {required: true}),\r\n        option1: creatOptionControl(1),\r\n        option2: creatOptionControl(2),\r\n        option3: creatOptionControl(3),\r\n        option4: creatOptionControl(4)\r\n    }\r\n}\r\nexport class QuizCreator extends Component {\r\n\r\n    state = {\r\n        quiz :[],\r\n        formControls:creatFormControl (),\r\n        isFormValid: false,\r\n        rightAnswerId : 1\r\n    }\r\n\r\n    submitHandler=(event) => {\r\n        event.preventDefault();\r\n    }\r\n    addQuestionHandler = event => {\r\n        event.preventDefault();\r\n        const quiz = [...this.state.quiz];\r\n        const index = quiz.length +1 ;\r\n\r\n        const {question, option1,option2,option3,option4} = this.state.formControls \r\n        const questionItem = {\r\n            question:question.value,\r\n            id : index,\r\n            rightAnswerId: this.state.rightAnswerId,\r\n            answers : [\r\n                {text: option1.value, id: option1.id},\r\n                {text: option2.value, id: option2.id},\r\n                {text: option3.value, id: option3.id},\r\n                {text: option4.value, id: option4.id}\r\n            ]\r\n        }\r\n        console.log(questionItem.answers);\r\n        quiz.push(questionItem);\r\n        this.setState({\r\n            quiz,\r\n            formControls:creatFormControl (),\r\n            isFormValid: false,\r\n            rightAnswerId : 1\r\n        })\r\n    }\r\n\r\n    creatQuizHandler= async event => {\r\n        event.preventDefault();\r\n        \r\n        try {\r\n             await axios.post('quizes.json', this.state.quiz)\r\n            \r\n            this.setState({\r\n                quiz: [],\r\n                formControls:creatFormControl (),\r\n                isFormValid: false,\r\n                rightAnswerId : 1\r\n            })\r\n\r\n        }catch(e) {\r\n            console.log(e);\r\n        }\r\n        \r\n    }\r\n\r\n    changeHandler = (value, controlName) => {\r\n     const formControls = {...this.state.formControls};\r\n     const control = {...formControls[controlName]}\r\n\r\n     control.touched = true;\r\n     control.value = value; \r\n     control.valid = validate (control.value, control.validation)\r\n     \r\n\r\n     formControls[controlName] = control;\r\n\r\n     this.setState({\r\n         formControls, \r\n         isFormValid : validateForm(formControls)\r\n     })\r\n    }\r\n\r\n    renderControls = () => {\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName];\r\n            return (\r\n\r\n                <Auxiliary key ={index + controlName}>\r\n                    <Input\r\n                        \r\n                        label={control.label}\r\n                        value={control.value}\r\n                        valid={control.valid}\r\n                        shouldValidate ={!! control.validation}\r\n                        touched={control.touched}\r\n                        errorMessage ={control.errorMessage}\r\n                        onChange={event=> this.changeHandler(event.target.value, controlName)}\r\n                    />\r\n                    {index === 0 ? <hr/> : null}\r\n                </Auxiliary>\r\n            )\r\n        })\r\n    }\r\n    selectChangeHandler = (event) => {\r\n        this.setState({\r\n            rightAnswerId : +event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const select = <Select\r\n            label=\"Выберите правильный ответ\"\r\n            value = {this.state.rightAnswerId}\r\n            onChange = {this.selectChangeHandler}\r\n            options = {[\r\n                {text: 1 , value : 1},\r\n                {text: 2 , value : 2},\r\n                {text: 3 , value : 3},\r\n                {text: 4 , value : 4}\r\n            ]}\r\n        />\r\n        return (\r\n             <div className='QuizCreator'>\r\n                 <div>\r\n                     <h1>Создание теста</h1>\r\n                     <h3>Можно создовать несколько вопросов в одном тесте</h3>\r\n                     <form onSubmit={this.submitHandler}>\r\n                         {this.renderControls()}\r\n                         {select}\r\n                         <Button\r\n                         type=\"primary\"\r\n                         onClick={this.addQuestionHandler}\r\n                         disabled={!this.state.isFormValid}\r\n                         >\r\n                             Добавить вопрос\r\n                         </Button>\r\n                         <Button\r\n                             type=\"success\"\r\n                             onClick={this.creatQuizHandler}\r\n                             disabled={this.state.quiz.length === 0}\r\n                         >\r\n                             Создавать тест\r\n                         </Button>\r\n                     </form>\r\n                  \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default QuizCreator;","import React, { Component } from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Loader from '../../components/UI/loader/loader'\r\nimport './QuizList.css';\r\nimport {connect} from 'react-redux';\r\nimport { fetchQuizes } from '../../store/actions/quiz';\r\n\r\nexport class QuizList extends Component {\r\n\r\n    renderQuizes () {\r\n            return this.props.quizes.map(quiz => {\r\n                return(\r\n                    <li key={quiz.id}>\r\n                        <NavLink to={'/quiz/' + quiz.id}>\r\n                            {quiz.name}\r\n                        </NavLink>\r\n                    </li>\r\n                )\r\n                \r\n            })\r\n    }\r\n     componentDidMount(){\r\n         this.props.fetchQuizes()\r\n    }\r\n    render() {\r\n        return (\r\n             <div className=\"QuizList\">\r\n                 <div>\r\n                      <h1>Список тестов</h1>\r\n                      {this.props.Loading ? <Loader/> && this.props.quizes.lengrh !== 0 : \r\n                      <ul>\r\n                          { this.renderQuizes() }\r\n                      </ul>\r\n                      }\r\n                 </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        quizes : state.quiz.quizes,\r\n        Loading : state.quiz.Loading\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps (dispatch) {\r\n    return {\r\n        fetchQuizes: () => dispatch(fetchQuizes())\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList);","import React,{Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {logout} from '../../store/actions/authAction'\r\n\r\n\r\nclass Logout extends Component {\r\n    componentDidMount(){\r\n        this.props.logout()\r\n    }\r\n\r\n    render () {\r\n        return <Redirect to={'/'}/>\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        logout : () => dispatch(logout())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout)","import React,{Component} from 'react';\nimport Layout from './hos/Layout/layout';\nimport {Route, Switch, Redirect, withRouter} from 'react-router-dom';\nimport Quiz from './containers/Quiz/Quiz';\nimport Auth from './containers/Auth/Auth';\nimport QuizCreator from './containers/QuizCreator/QuizCreator';\nimport QuizList from './containers/QuizList/QuizList';\nimport { connect } from 'react-redux';\nimport Logout from './components/Logout/Logout'\nimport { authLogin } from './store/actions/authAction';\n\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.authLogin()\n  }\n  render() {\n    let routes = (\n      <Switch>\n          <Route path=\"/auth\" component={Auth}/>\n          <Route path=\"/quiz/:id\" component={Quiz}/>\n          <Route path=\"/\" exact component={QuizList}/>\n          <Redirect to= \"/\"/>\n      </Switch>\n    )\n\n    if (this.props.isAuthenticated){\n      routes = (\n        <Switch>\n            <Route path=\"/quiz-creator\" component={QuizCreator}/>\n            <Route path=\"/quiz/:id\" component={Quiz}/>\n            <Route path=\"/logout\" component ={Logout}/>\n            <Route path=\"/\" exact component={QuizList}/>\n            <Redirect to= \"/\"/>\n        </Switch>\n      )\n  \n    }\n    return (\n      <Layout>\n        {routes}\n      </Layout>\n    );\n  }\n}\n\nfunction mapStateToProps (state){\n  return {\n    isAuthenticated: !! state.auth.token\n  }\n}\nfunction mapDispatchToProps (dispatch){\n  return {\n    authLogin : () => dispatch(authLogin())\n  }\n}\n\nexport default withRouter( connect(mapStateToProps, mapDispatchToProps) (App));\n","import { AUTH_LOGOUT, AUTH_SUCCESS } from \"../actions/actionsTypes\"\r\n\r\nconst initialState = {\r\n    token: null\r\n}\r\n\r\nexport default function authReducer(state= initialState, action) {\r\n    switch(action.type) {\r\n        case AUTH_SUCCESS :\r\n            return{\r\n                ...state , token: action.token\r\n            }\r\n        case AUTH_LOGOUT :\r\n            return {\r\n                ...state, token: null\r\n            }\r\n        default :\r\n        return state\r\n    }\r\n}","import { FETCH_QUIZES_START, FETCH_QUIZES_SUCCESS, FETCH_QUIZES_ERROR, FETCH_QUIZ_SUCCESS, QUIZ_SET_STATE, FINISH_QUIZ, QUIZ_NEXT_QUESTION, QUIZ_RETRY\r\n } from '../actions/actionsTypes'\r\n\r\nconst initialState = {\r\n    quizes : [],\r\n    Loading : false,\r\n    error: null,\r\n    results: {},\r\n    isFinished : false,\r\n    activeQuestion : 0,\r\n    answerState : null,\r\n    quiz: null \r\n\r\n}\r\n\r\nexport default function quizReducer (state = initialState, action) {\r\n    \r\n    switch(action.type){\r\n        case FETCH_QUIZES_START : \r\n        return {\r\n            ...state, Loading : true \r\n        }\r\n        case FETCH_QUIZES_SUCCESS : \r\n        return {\r\n            ...state, Loading: false, quizes: action.quizes\r\n        }\r\n        case FETCH_QUIZES_ERROR : \r\n        return {\r\n            ...state, Loading: false, error: action.error\r\n        }\r\n        case FETCH_QUIZ_SUCCESS : \r\n        return {\r\n            ...state, loading: false , quiz: action.quiz\r\n        }\r\n        case QUIZ_SET_STATE : \r\n        return {\r\n            ...state, answerState: action.answerState, results : action.results\r\n        }\r\n        case FINISH_QUIZ : \r\n        return {\r\n            ...state, isFinished: true\r\n        }\r\n        case QUIZ_NEXT_QUESTION :\r\n        return {\r\n            ...state, answerState: null , activeQuestion: action.number\r\n        }\r\n        case QUIZ_RETRY :\r\n            return {\r\n                ...state,  \r\n                results: {},\r\n                isFinished : false,\r\n                activeQuestion : 0,\r\n                answerState : null,\r\n            }\r\n        default: \r\n        return state \r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport authReducer from './authR';\r\nimport quizReducer from './quiz';\r\n\r\n\r\n\r\nexport default combineReducers ({\r\n    quiz: quizReducer,\r\n    auth: authReducer\r\n    \r\n}) ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport {createStore, compose, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport rootReducers from './store/reducers/rootReducers';\nimport thunk from 'redux-thunk';\n \n\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    }) : compose;\n \nconst store = createStore(\n    rootReducers,\n    composeEnhancers(applyMiddleware(thunk))\n    \n    );\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app,document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}