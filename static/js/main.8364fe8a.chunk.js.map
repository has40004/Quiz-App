{"version":3,"sources":["components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hos/Layout/layout.js","components/ActiveQuiz/AnswersList/AnswersItem/AnswersItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/success/Success.js","containers/Quiz/Quiz.js","App.js","index.js"],"names":["MenuToggle","props","cls","isOpen","icons","faTimes","faBars","icon","onClick","onToggle","className","Backdrop","link","Drawer","map","index","href","this","renderLinks","onClose","Component","Layout","state","menu","toggleMenu","setState","menuCloseHandler","children","AnswersItem","onClickAnswer","answer","id","text","AnswersList","answers","ActiveQuiz","answerNumber","question","quizLength","onAnswerClickHandel","Button","clc","type","join","disabled","Finish","successCount","Object","keys","results","reduce","total","key","quiz","quizItem","faCheck","length","onReplay","Quiz","isFinished","activeQuestion","answerState","rightAnswerId","answerId","timeOut","window","setTimeout","isQuizFinished","clearTimeout","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8364fe8a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars, faTimes} from '@fortawesome/free-solid-svg-icons';\r\nimport './MenuToglle.css';\r\n\r\nconst MenuToggle = (props) => {\r\n    let cls = 'MenuToglle';\r\n\r\n    if (props.isOpen){\r\n        cls += ' open';\r\n    }\r\n\r\n    const icons = props.isOpen? faTimes : faBars ;\r\n    return (\r\n\r\n        <FontAwesomeIcon icon={icons} onClick={props.onToggle} className={cls}/>\r\n    )\r\n}\r\nexport default MenuToggle;","import React from 'react'\r\nimport './Backdrop.css'\r\n\r\nconst Backdrop = props => <div className='Backdrop' onClick={props.onClick}/>\r\n\r\nexport default Backdrop;","import React, { Component } from 'react' \r\nimport Backdrop from '../../UI/Backdrop/Backdrop'\r\nimport './Drawer.css';\r\nconst link = [\r\n    1, 2, 3\r\n]\r\nclass Drawer extends Component {\r\n    renderLinks(){\r\n        return  link.map((link, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    <a href='f'> link {link}</a>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n    render () {\r\n        let cls = 'Drawer';\r\n        if ( !this.props.isOpen){\r\n            cls += '  close'\r\n        }\r\n        return (\r\n            <>\r\n            <nav className={cls}>\r\n                <ul>\r\n                    {this.renderLinks()}\r\n                </ul>\r\n\r\n            </nav>\r\n            {this.props.isOpen? <Backdrop onClick={this.props.onClose}/> : null}\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default Drawer;","import React, {Component} from 'react';\r\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle'\r\nimport Drawer from '../../components/Navigation/Drawer/Drawer'\r\nimport './layout.css';\r\n\r\nclass Layout extends Component {\r\n\r\n    state={\r\n        menu: false\r\n    }\r\n    toggleMenu = () => {\r\n        this.setState({\r\n            menu : !this.state.menu \r\n        })\r\n    }\r\n    menuCloseHandler= () => {\r\n        this.setState({\r\n            menu: false\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='layout'>\r\n                <Drawer\r\n                 isOpen={this.state.menu}\r\n                 onClose={this.menuCloseHandler}\r\n                />\r\n                <MenuToggle\r\n                onToggle={this.toggleMenu}\r\n                isOpen={this.state.menu}\r\n                />\r\n                <main >\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Layout;\r\n","import React from 'react' ;\r\nimport './AnswersItem.css';\r\n\r\nconst AnswersItem = (props) => {\r\n\r\n    // const cls = ['AnswersItem'];\r\n    let cls = 'AnswersItem ';\r\n\r\n    if (props.state) {\r\n        // cls.push(props.state)\r\n        cls += props.state;\r\n    } \r\n    \r\n    return (\r\n        <li \r\n            // className= {cls.join(' ')} \r\n            className= {cls} \r\n            onClick={() => props.onClickAnswer (props.answer.id)}\r\n            >\r\n                \r\n            {props.answer.text}\r\n            \r\n\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default AnswersItem; ","import React from 'react';\r\nimport AnswersItem from './AnswersItem/AnswersItem';\r\n\r\nimport './AnswersList.css';\r\n\r\nconst AnswersList = props => (\r\n    <ul className='AnswersList'>\r\n        \r\n        {props.answers.map((answer, index) => {\r\n           \r\n           return (\r\n               <AnswersItem \r\n               key = {index}\r\n               answer={answer}\r\n               onClickAnswer = {props.onClickAnswer}\r\n               state ={props.state ? props.state[answer.id] : null}\r\n               />\r\n            ) \r\n\r\n        })}\r\n    </ul>\r\n)\r\n\r\nexport default AnswersList; ","import React from 'react';\r\nimport AnswersList from './AnswersList/AnswersList';\r\nimport './ActiveQuiz.css';\r\n\r\nconst ActiveQuiz = props => {\r\n    return (\r\n        <div className='ActiveQuiz'>\r\n            <p className='question'> \r\n                <span>\r\n                    <strong>{props.answerNumber}.</strong>&nbsp;\r\n                    {props.question}\r\n                </span>\r\n                <small> {props.answerNumber} из {props.quizLength}</small>\r\n            </p>\r\n            <AnswersList \r\n                state={props.state}\r\n                answers={props.answers}\r\n                onClickAnswer = {props.onAnswerClickHandel}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default ActiveQuiz;","import React from 'react' ;\r\nimport './Button.css';\r\n\r\nconst Button = (props) => {\r\n    const clc = [\r\n        'Button',\r\n        [props.type]\r\n    ]\r\n    return (\r\n        <button\r\n            onClick={props.onClick}\r\n            className={clc.join(' ')}\r\n            disabled={props.disabled}\r\n\r\n        >\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport Button from '../UI/Button/Button'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faTimes} from '@fortawesome/free-solid-svg-icons';\r\nimport './success.css';\r\n\r\n\r\nconst Finish = (props) => {\r\n    const successCount = Object.keys(props.results).reduce((total, key) => {\r\n        if (props.results[key] === 'Success'){\r\n            total ++\r\n        }\r\n        return total \r\n\r\n    }, 0)\r\n    return (\r\n        <div className='finished'>\r\n           <ul>\r\n               {props.quiz.map((quizItem, index) => {\r\n                   const icons = (props.results[quizItem.id]) === 'error' ? faTimes : faCheck ;\r\n                   const clc = [\r\n                       'margin',\r\n                       props.results[quizItem.id] === 'error' ? 'error' : 'Success'\r\n                    ]\r\n                    \r\n                   return (\r\n                       <li \r\n                        key={index}\r\n                       >\r\n                           <strong>{index + 1} </strong>. &nbsp;\r\n                           {quizItem.question}\r\n                           <FontAwesomeIcon icon={icons} className={clc.join(' ')} />\r\n                       </li>\r\n                       \r\n                   )\r\n               })}\r\n               \r\n           </ul>\r\n           <p> правильно {successCount} из {props.quiz.length}</p>\r\n           <div>\r\n               <Button onClick={props.onReplay} type=\"primary\">Повторить</Button>\r\n               <Button  type=\"success\">Перейти в список тестов</Button>\r\n           </div> \r\n           \r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Finish;","import React, {Component} from 'react';\r\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz'\r\nimport Finish from '../../components/success/Success'\r\n\r\nimport './Quiz.css';\r\n\r\nclass Quiz extends Component {\r\n    state = {\r\n        results: {},\r\n        isFinished : false,\r\n        activeQuestion : 0,\r\n        answerState : null,\r\n        quiz: [\r\n            {\r\n                question : 'Какого цвета небо ?',\r\n                rightAnswerId : 3,\r\n                id : 1,\r\n                answers: [  \r\n                    {text : 'Черный', id :1},\r\n                    {text : 'Зеленый', id:2},\r\n                    {text : 'Синий', id:3},\r\n                    {text : 'Красный', id:4}\r\n                ]\r\n            },\r\n            {\r\n                question : 'В каком году создали Санкт-Петербург ?',\r\n                rightAnswerId : 'c',\r\n                id : 2,\r\n                answers: [  \r\n                    {text : '1700', id :'a'},\r\n                    {text : '1702', id:'b'},\r\n                    {text : '1703', id:'c'},\r\n                    {text : '1083', id:'d'}\r\n                ]\r\n            },\r\n            {\r\n                question : 'Откуда пришло слово Сабир ?',\r\n                rightAnswerId : 'l',\r\n                id : 3,\r\n                answers: [  \r\n                    {text : 'Хасан чудил', id :'f'},\r\n                    {text : 'Абдуллу приснилось', id:'g'},\r\n                    {text : 'Ахмед придумал', id:'h'},\r\n                    {text : 'Аль-Ругми когда то расказал', id:'l'}\r\n                ]\r\n            },\r\n            {\r\n                question : 'Что значит слово \" Ку\" ?',\r\n                rightAnswerId : 1,\r\n                id : 4,\r\n                answers: [  \r\n                    {text : 'Зуб', id :1},\r\n                    {text : 'нос', id:2},\r\n                    {text : 'Абдулл', id:3},\r\n                    {text : 'Эззу', id:4}\r\n                ]\r\n            },\r\n            {\r\n                question : 'Столица Франции это  ?',\r\n                rightAnswerId : 3,\r\n                id : 5,\r\n                answers: [  \r\n                    {text : 'Москва', id :1},\r\n                    {text : 'Багдад', id:2},\r\n                    {text : 'Париж', id:3},\r\n                    {text : 'ХЗ', id:4}\r\n                ]\r\n            },\r\n            {\r\n                question : 'Ливан это -  ?',\r\n                rightAnswerId : 2,\r\n                id : 6,\r\n                answers: [  \r\n                    {text : 'Еда', id :1},\r\n                    {text : 'Страна', id:2},\r\n                    {text : 'Мяч', id:3},\r\n                    {text : 'Судья', id:4}\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n\r\n    onAnswerClickHandel = (answerId) => {\r\n\r\n        if ( this. state.answerState) {\r\n            const key = Object.keys(this.state.answerState) [0];\r\n            if ( this.state.answerState[key] === 'Success'){\r\n                return \r\n            }\r\n        }\r\n    \r\n        const question = this.state.quiz[this.state.activeQuestion] ;\r\n        const results = this.state.results;\r\n\r\n        if (question.rightAnswerId === answerId) {\r\n            \r\n            if ( !results[question.id] ){\r\n                results[question.id] = 'Success';\r\n            }\r\n            this.setState ({\r\n                answerState: { [answerId]: 'Success'},\r\n                results\r\n            })\r\n            const timeOut = window.setTimeout( () => { \r\n                if (this.isQuizFinished()){\r\n                    this.setState({\r\n                        isFinished: true\r\n                    })\r\n                \r\n                }else {\r\n                    this.setState({\r\n                        activeQuestion: this.state.activeQuestion + 1,\r\n                        answerState: null \r\n                    })\r\n                }\r\n            \r\n                window.clearTimeout(timeOut);\r\n\r\n            }, 1000)\r\n            \r\n\r\n        }else {\r\n            \r\n            results[question.id] = 'error';\r\n            this.setState({\r\n                answerState: { [answerId]: 'error'},\r\n                results \r\n            })\r\n            \r\n        }       \r\n    }\r\n    \r\n    isQuizFinished () {\r\n        return this.state.activeQuestion +1 === this.state.quiz.length \r\n\r\n    }\r\n    onReplay = () => {\r\n        this.setState ({\r\n            results: {},\r\n            isFinished : false,\r\n            activeQuestion : 0,\r\n            answerState : null,\r\n        });\r\n    }\r\n\r\n    render() {\r\n       \r\n        return (\r\n            <div className='Quiz'>\r\n                <div className='QuizWrapper'>\r\n                    <h1>Ответьете на все вопросы </h1> \r\n                    <h3 >Внимание! Только первый ответ будет засчитан </h3>\r\n                    {\r\n                        this.state.isFinished ? <Finish\r\n                        results = {this.state.results}\r\n                        quiz = { this.state.quiz}\r\n                        onReplay={this.onReplay}\r\n                        /> \r\n                        : \r\n                        <ActiveQuiz \r\n                        answers={this.state.quiz[this.state.activeQuestion].answers}\r\n                        question = {this.state.quiz[this.state.activeQuestion].question}\r\n                        onAnswerClickHandel = {this.onAnswerClickHandel}\r\n                        quizLength = {this.state.quiz.length}\r\n                        answerNumber = { this.state.activeQuestion + 1}\r\n                        state= {this.state.answerState}\r\n                        \r\n                        />\r\n                    }\r\n                   \r\n                </div>\r\n                \r\n\r\n            </div>\r\n        )\r\n        \r\n    }\r\n}\r\nexport default Quiz; ","import React,{Component} from 'react';\nimport Layout from './hos/Layout/layout';\nimport Quiz from './containers/Quiz/Quiz'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Layout>\n         <Quiz/>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />,document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}