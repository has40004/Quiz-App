{"version":3,"sources":["components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hos/Layout/layout.js","components/ActiveQuiz/AnswersList/AnswersItem/AnswersItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/success/Success.js","containers/Quiz/Quiz.js","components/UI/Input/Input.js","containers/Auth/Auth.js","containers/QuizCreator/QuizCreator.js","containers/QuizList/QuizList.js","App.js","index.js"],"names":["MenuToggle","props","cls","isOpen","icons","faTimes","faBars","icon","onClick","onToggle","className","Backdrop","link","to","lable","exact","Drawer","clickHandel","onClose","map","index","activeClassName","this","renderLinks","Component","Layout","state","menu","toggleMenu","setState","menuCloseHandler","children","AnswersItem","onClickAnswer","answer","id","text","AnswersList","answers","ActiveQuiz","answerNumber","question","quizLength","onAnswerClickHandel","Button","clc","type","join","disabled","Finish","successCount","Object","keys","results","reduce","total","key","quiz","quizItem","faCheck","length","onReplay","Quiz","isFinished","activeQuestion","answerState","rightAnswerId","answerId","timeOut","window","setTimeout","isQuizFinished","clearTimeout","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","label","value","onChange","errorMessage","Auth","formControls","email","validation","required","password","minLength","loginHandler","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","validateControl","isValid","trim","test","String","toLowerCase","onSubmit","renderInput","QuizCreator","QuizList","renderQuizes","App","path","component","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8af46f0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars, faTimes} from '@fortawesome/free-solid-svg-icons';\r\nimport './MenuToglle.css';\r\n\r\nconst MenuToggle = (props) => {\r\n    let cls = 'MenuToglle';\r\n\r\n    if (props.isOpen){\r\n        cls += ' open';\r\n    }\r\n\r\n    const icons = props.isOpen? faTimes : faBars ;\r\n    return (\r\n\r\n        <FontAwesomeIcon icon={icons} onClick={props.onToggle} className={cls}/>\r\n    )\r\n}\r\nexport default MenuToggle;","import React from 'react'\r\nimport './Backdrop.css'\r\n\r\nconst Backdrop = props => <div className='Backdrop' onClick={props.onClick}/>\r\n\r\nexport default Backdrop;","import React, { Component } from 'react' \r\nimport {NavLink} from 'react-router-dom';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop'\r\nimport './Drawer.css';\r\nconst link = [\r\n    {to:\"/\" , lable:\"список\", exact: true},\r\n    {to:\"/auth\" , lable:\"Авторизация\", exact: false},\r\n    {to:\"/quiz-creator\" , lable:\"Создавать тест\", exact: false}\r\n\r\n\r\n]\r\nclass Drawer extends Component {\r\n    clickHandel =() => {\r\n        this.props.onClose()\r\n    }\r\n    renderLinks(){\r\n        return  link.map((link, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    <NavLink\r\n                        to={link.to}\r\n                        exact={link.exact}\r\n                        activeClassName=\" active\"\r\n                        onClick={this.clickHandel}\r\n                    >\r\n                        {link.lable}\r\n                        \r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n    render () {\r\n        let cls = 'Drawer';\r\n        if ( !this.props.isOpen){\r\n            cls += '  close'\r\n        }\r\n        return (\r\n            <>\r\n            <nav className={cls}>\r\n                <ul>\r\n                    {this.renderLinks()}\r\n                </ul>\r\n\r\n            </nav>\r\n            {this.props.isOpen? <Backdrop onClick={this.props.onClose}/> : null}\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default Drawer;","import React, {Component} from 'react';\r\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle'\r\nimport Drawer from '../../components/Navigation/Drawer/Drawer'\r\nimport './layout.css';\r\n\r\nclass Layout extends Component {\r\n\r\n    state={\r\n        menu: false\r\n    }\r\n    toggleMenu = () => {\r\n        this.setState({\r\n            menu : !this.state.menu \r\n        })\r\n    }\r\n    menuCloseHandler= () => {\r\n        this.setState({\r\n            menu: false\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='layout'>\r\n                <Drawer\r\n                 isOpen={this.state.menu}\r\n                 onClose={this.menuCloseHandler}\r\n                />\r\n                <MenuToggle\r\n                onToggle={this.toggleMenu}\r\n                isOpen={this.state.menu}\r\n                />\r\n                <main >\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Layout;\r\n","import React from 'react' ;\r\nimport './AnswersItem.css';\r\n\r\nconst AnswersItem = (props) => {\r\n\r\n    // const cls = ['AnswersItem'];\r\n    let cls = 'AnswersItem ';\r\n\r\n    if (props.state) {\r\n        // cls.push(props.state)\r\n        cls += props.state;\r\n    } \r\n    \r\n    return (\r\n        <li \r\n            // className= {cls.join(' ')} \r\n            className= {cls} \r\n            onClick={() => props.onClickAnswer (props.answer.id)}\r\n            >\r\n                \r\n            {props.answer.text}\r\n            \r\n\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default AnswersItem; ","import React from 'react';\r\nimport AnswersItem from './AnswersItem/AnswersItem';\r\n\r\nimport './AnswersList.css';\r\n\r\nconst AnswersList = props => (\r\n    <ul className='AnswersList'>\r\n        \r\n        {props.answers.map((answer, index) => {\r\n           \r\n           return (\r\n               <AnswersItem \r\n               key = {index}\r\n               answer={answer}\r\n               onClickAnswer = {props.onClickAnswer}\r\n               state ={props.state ? props.state[answer.id] : null}\r\n               />\r\n            ) \r\n\r\n        })}\r\n    </ul>\r\n)\r\n\r\nexport default AnswersList; ","import React from 'react';\r\nimport AnswersList from './AnswersList/AnswersList';\r\nimport './ActiveQuiz.css';\r\n\r\nconst ActiveQuiz = props => {\r\n    return (\r\n        <div className='ActiveQuiz'>\r\n            <p className='question'> \r\n                <span>\r\n                    <strong>{props.answerNumber}.</strong>&nbsp;\r\n                    {props.question}\r\n                </span>\r\n                <small> {props.answerNumber} из {props.quizLength}</small>\r\n            </p>\r\n            <AnswersList \r\n                state={props.state}\r\n                answers={props.answers}\r\n                onClickAnswer = {props.onAnswerClickHandel}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default ActiveQuiz;","import React from 'react' ;\r\nimport './Button.css';\r\n\r\nconst Button = (props) => {\r\n    const clc = [\r\n        'Button',\r\n        [props.type]\r\n    ]\r\n    return (\r\n        <button\r\n            onClick={props.onClick}\r\n            className={clc.join(' ')}\r\n            disabled={props.disabled}\r\n\r\n        >\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport Button from '../UI/Button/Button'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faTimes} from '@fortawesome/free-solid-svg-icons';\r\nimport {Link} from 'react-router-dom';\r\nimport './success.css';\r\n\r\n\r\nconst Finish = (props) => {\r\n    const successCount = Object.keys(props.results).reduce((total, key) => {\r\n        if (props.results[key] === 'Success'){\r\n            total ++\r\n        }\r\n        return total \r\n\r\n    }, 0)\r\n    return (\r\n        <div className='finished'>\r\n           <ul>\r\n               {props.quiz.map((quizItem, index) => {\r\n                   const icons = (props.results[quizItem.id]) === 'error' ? faTimes : faCheck ;\r\n                   const clc = [\r\n                       'margin',\r\n                       props.results[quizItem.id] === 'error' ? 'error' : 'Success'\r\n                    ]\r\n                    \r\n                   return (\r\n                       <li \r\n                        key={index}\r\n                       >\r\n                           <strong>{index + 1} </strong>. &nbsp;\r\n                           {quizItem.question}\r\n                           <FontAwesomeIcon icon={icons} className={clc.join(' ')} />\r\n                       </li>\r\n                       \r\n                   )\r\n               })}\r\n               \r\n           </ul>\r\n           <p> правильно {successCount} из {props.quiz.length}</p>\r\n           <div>\r\n               <Button onClick={props.onReplay} type=\"primary\">Повторить</Button>\r\n               <Link to='/'>\r\n                    <Button  type=\"success\">Перейти в список тестов</Button>\r\n               </Link>\r\n           </div> \r\n           \r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Finish;","import React, {Component} from 'react';\r\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz'\r\nimport Finish from '../../components/success/Success'\r\n\r\nimport './Quiz.css';\r\n\r\nclass Quiz extends Component {\r\n    state = {\r\n        results: {},\r\n        isFinished : false,\r\n        activeQuestion : 0,\r\n        answerState : null,\r\n        quiz: [\r\n            {\r\n                question : 'Какого цвета небо ?',\r\n                rightAnswerId : 3,\r\n                id : 1,\r\n                answers: [  \r\n                    {text : 'Черный', id :1},\r\n                    {text : 'Зеленый', id:2},\r\n                    {text : 'Синий', id:3},\r\n                    {text : 'Красный', id:4}\r\n                ]\r\n            },\r\n            {\r\n                question : 'В каком году создали Санкт-Петербург ?',\r\n                rightAnswerId : 'c',\r\n                id : 2,\r\n                answers: [  \r\n                    {text : '1700', id :'a'},\r\n                    {text : '1702', id:'b'},\r\n                    {text : '1703', id:'c'},\r\n                    {text : '1083', id:'d'}\r\n                ]\r\n            },\r\n            {\r\n                question : 'Откуда пришло слово Сабир ?',\r\n                rightAnswerId : 'l',\r\n                id : 3,\r\n                answers: [  \r\n                    {text : 'Хасан чудил', id :'f'},\r\n                    {text : 'Абдуллу приснилось', id:'g'},\r\n                    {text : 'Ахмед придумал', id:'h'},\r\n                    {text : 'Аль-Ругми когда то расказал', id:'l'}\r\n                ]\r\n            },\r\n            {\r\n                question : 'Что значит слово \" Ку\" ?',\r\n                rightAnswerId : 1,\r\n                id : 4,\r\n                answers: [  \r\n                    {text : 'Зуб', id :1},\r\n                    {text : 'нос', id:2},\r\n                    {text : 'Абдулл', id:3},\r\n                    {text : 'Эззу', id:4}\r\n                ]\r\n            },\r\n            {\r\n                question : 'Столица Франции это  ?',\r\n                rightAnswerId : 3,\r\n                id : 5,\r\n                answers: [  \r\n                    {text : 'Москва', id :1},\r\n                    {text : 'Багдад', id:2},\r\n                    {text : 'Париж', id:3},\r\n                    {text : 'ХЗ', id:4}\r\n                ]\r\n            },\r\n            {\r\n                question : 'Ливан это -  ?',\r\n                rightAnswerId : 2,\r\n                id : 6,\r\n                answers: [  \r\n                    {text : 'Еда', id :1},\r\n                    {text : 'Страна', id:2},\r\n                    {text : 'Мяч', id:3},\r\n                    {text : 'Судья', id:4}\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n\r\n    onAnswerClickHandel = (answerId) => {\r\n\r\n        if ( this.state.answerState) {\r\n            const key = Object.keys(this.state.answerState)[0];\r\n            if ( this.state.answerState[key] === 'Success'){\r\n                return \r\n            }\r\n        }\r\n    \r\n        const question = this.state.quiz[this.state.activeQuestion] ;\r\n        const results = this.state.results;\r\n\r\n        if (question.rightAnswerId === answerId) {\r\n            \r\n            if ( !results[question.id] ){\r\n                results[question.id] = 'Success';\r\n            }\r\n            this.setState ({\r\n                answerState: { [answerId]: 'Success'},\r\n                results\r\n            })\r\n            const timeOut = window.setTimeout( () => { \r\n                if (this.isQuizFinished()){\r\n                    this.setState({\r\n                        isFinished: true\r\n                    })\r\n                \r\n                }else {\r\n                    this.setState({\r\n                        activeQuestion: this.state.activeQuestion + 1,\r\n                        answerState: null \r\n                    })\r\n                }\r\n            \r\n                window.clearTimeout(timeOut);\r\n\r\n            }, 1000)\r\n            \r\n\r\n        }else {\r\n            \r\n            results[question.id] = 'error';\r\n            this.setState({\r\n                answerState: { [answerId]: 'error'},\r\n                results \r\n            })\r\n            \r\n        }       \r\n    }\r\n    \r\n    isQuizFinished () {\r\n        return this.state.activeQuestion +1 === this.state.quiz.length \r\n\r\n    }\r\n    onReplay = () => {\r\n        this.setState ({\r\n            results: {},\r\n            isFinished : false,\r\n            activeQuestion : 0,\r\n            answerState : null,\r\n        });\r\n    }\r\n\r\n    render() {\r\n       \r\n        return (\r\n            <div className='Quiz'>\r\n                <div className='QuizWrapper'>\r\n                    <h1>Ответьете на все вопросы </h1> \r\n                    <h3 >Внимание! Только первый ответ будет засчитан </h3>\r\n                    {\r\n                        this.state.isFinished ? <Finish\r\n                        results = {this.state.results}\r\n                        quiz = { this.state.quiz}\r\n                        onReplay={this.onReplay}\r\n                        /> \r\n                        : \r\n                        <ActiveQuiz \r\n                        answers={this.state.quiz[this.state.activeQuestion].answers}\r\n                        question = {this.state.quiz[this.state.activeQuestion].question}\r\n                        onAnswerClickHandel = {this.onAnswerClickHandel}\r\n                        quizLength = {this.state.quiz.length}\r\n                        answerNumber = { this.state.activeQuestion + 1}\r\n                        state= {this.state.answerState}\r\n                        \r\n                        />\r\n                    }\r\n                   \r\n                </div>\r\n                \r\n\r\n            </div>\r\n        )\r\n        \r\n    }\r\n}\r\nexport default Quiz; ","import React from 'react';\r\nimport './Input.css';\r\n\r\nfunction isInvalid ({valid, touched, shouldValidate}) {\r\n    return !valid && shouldValidate && touched\r\n}\r\nconst Input = props => {\r\nconst inputType = props.type || 'text';\r\nlet cls = 'Input';\r\nconst htmlFor = `${inputType}-${Math.random()}`;\r\n\r\nif( isInvalid (props)){\r\n    cls+= ' invalid'\r\n}\r\n\r\n    return (\r\n        <div className={cls}>\r\n           <label htmlFor={htmlFor} >{props.label}</label>\r\n           <input \r\n                type={inputType}\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n\r\n           /> \r\n           {isInvalid (props)?<span>{props.errorMessage || 'Введите верное значение'}</span> : null }\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input; ","import React, { Component } from 'react'\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Input from '../../components/UI/Input/Input'\r\nimport './Auth.css';\r\n\r\nfunction validateEmail(email) {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\nexport class Auth extends Component {\r\n\r\n    state = {\r\n        formControls : {\r\n            email:{\r\n                value: '',\r\n                type: 'email',\r\n                label:'Email',\r\n                errorMessage:'Введите корректный Email',\r\n                valid: false,\r\n                touched:false,\r\n                validation: {\r\n                    required:true,\r\n                    email:true\r\n                }\r\n            },\r\n            password: {\r\n                value: '',\r\n                type: 'password',\r\n                label:'Пароль',\r\n                errorMessage:'Введите корректный Пароль',\r\n                valid: false,\r\n                touched:false,\r\n                validation: {\r\n                    required:true,\r\n                    minLength:6\r\n                }\r\n            }\r\n        }\r\n    }\r\n    loginHandler = () => {\r\n\r\n    }\r\n\r\n    registerHandler = () => {\r\n\r\n    }\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    validateControl (value, validation){\r\n        if(!validation){\r\n            return true\r\n        }\r\n\r\n        let isValid = true;\r\n        \r\n        if(validation.required){\r\n            isValid=value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if(validation.email){\r\n           isValid = validateEmail(value) && isValid\r\n        }\r\n\r\n        if(validation.minLength){\r\n            isValid= value.length >= validation.minLength && isValid\r\n        }\r\n\r\n        return isValid;\r\n\r\n    }\r\n\r\n    onChangeHandler = (event,controlName) => {\r\n        const formControls = {...this.state.formControls};\r\n        const control = {...formControls[controlName]};\r\n\r\n        control.value = event.target.value;\r\n        control.touched = true;\r\n        control.valid =this.validateControl(control.value , control.validation)\r\n        formControls[controlName] = control;\r\n        this.setState ({\r\n            formControls\r\n        })\r\n\r\n    }\r\n\r\n    renderInput(){\r\n        \r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName];\r\n            return (\r\n                <Input\r\n                    key={controlName + index}\r\n                    type={control.type}\r\n                    value={control.value}\r\n                    valid={control.valid}\r\n                    touched={control.touched}\r\n                    label={control.label}\r\n                    shouldValidate={!!control.validation}\r\n                    errorMessage ={control.errorMessage}\r\n                    onChange={event => this.onChangeHandler(event,controlName)}\r\n                />\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className='Auth'>\r\n                <div>\r\n                    <h1>Авторизация</h1>\r\n                    <form onSubmit={this.submitHandler} className='AuthForm'>\r\n                       {this.renderInput()}\r\n                        <Button \r\n                            type=\"success\" \r\n                            onClick={this.loginHandler}\r\n                        >\r\n                            Войти\r\n                        </Button>\r\n                        <Button \r\n                            type=\"primary\" \r\n                            onClick={this.registerHandler}\r\n                        >\r\n                            Зарегистрироваться\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Auth\r\n\r\n","import React, { Component } from 'react';\r\nexport class QuizCreator extends Component {\r\n    render() {\r\n        return (\r\n             <div>\r\n                <h1>quiz-creator</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default QuizCreator;","import React, { Component } from 'react';\r\nimport {NavLink} from 'react-router-dom'\r\nimport './QuizList.css';\r\nexport class QuizList extends Component {\r\n    renderQuizes () {\r\n            return [1,2,3].map((quiz,index) => {\r\n                return(\r\n                    <li key={index}>\r\n                        <NavLink to={'/quiz/' + quiz}>\r\n                            Тест {quiz}\r\n                        </NavLink>\r\n                    </li>\r\n                )\r\n                \r\n            })\r\n    }\r\n    render() {\r\n        return (\r\n             <div className=\"QuizList\">\r\n                 <div>\r\n                      <h1>Список тестов</h1>\r\n                      <ul>\r\n                          {this.renderQuizes()}\r\n                      </ul>\r\n\r\n                 </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default QuizList;","import React,{Component} from 'react';\nimport Layout from './hos/Layout/layout';\nimport {Route, Switch} from 'react-router-dom';\nimport Quiz from './containers/Quiz/Quiz';\nimport Auth from './containers/Auth/Auth';\nimport QuizCreator from './containers/QuizCreator/QuizCreator';\nimport QuizList from './containers/QuizList/QuizList';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Layout>\n         <Switch>\n           <Route path=\"/auth\" component={Auth}/>\n           <Route path=\"/quiz-creator\" component={QuizCreator}/>\n           <Route path=\"/quiz/:id\" component={Quiz}/>\n           <Route path=\"/\" component={QuizList}/>\n         </Switch>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\n\nconst app = (\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>\n)\n\nReactDOM.render(app,document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}