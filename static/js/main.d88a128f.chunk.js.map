{"version":3,"sources":["components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hos/Layout/layout.js","components/ActiveQuiz/AnswersList/AnswersItem/AnswersItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/success/Success.js","axios/axios.js","components/UI/loader/loader.js","containers/Quiz/Quiz.js","components/UI/Input/Input.js","containers/Auth/Auth.js","Form/Form.js","hos/Auxiliyar/Auxiliary.js","components/UI/Select/Select.js","containers/QuizCreator/QuizCreator.js","containers/QuizList/QuizList.js","App.js","index.js"],"names":["MenuToggle","props","cls","isOpen","icons","faTimes","faBars","icon","onClick","onToggle","className","Backdrop","link","to","lable","exact","Drawer","clickHandel","onClose","map","index","activeClassName","this","renderLinks","Component","Layout","state","menu","toggleMenu","setState","menuCloseHandler","children","AnswersItem","onClickAnswer","answer","id","text","AnswersList","answers","ActiveQuiz","answerNumber","question","quizLength","onAnswerClickHandel","Button","clc","type","join","disabled","Finish","successCount","Object","keys","results","reduce","total","key","quiz","quizItem","faCheck","length","onReplay","axios","create","baseURL","Loader","Quiz","isFinished","activeQuestion","answerState","loading","answerId","rightAnswerId","timeOut","window","setTimeout","isQuizFinished","clearTimeout","ides","match","params","get","response","data","console","log","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","label","value","onChange","errorMessage","Auth","isFormValid","formControls","email","validation","required","password","minLength","loginHandler","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","validateControl","forEach","name","pw","isValid","trim","test","String","toLowerCase","onSubmit","renderInput","creatControl","config","validate","validateForm","hasOwnProperty","Auxiliary","Select","options","option","creatOptionControl","number","creatFormControl","option1","option2","option3","option4","QuizCreator","addQuestionHandler","questionItem","push","creatQuizHandler","a","post","changeHandler","renderControls","selectChangeHandler","select","QuizList","quizes","Loading","renderQuizes","App","path","component","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d88a128f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars, faTimes} from '@fortawesome/free-solid-svg-icons';\r\nimport './MenuToglle.css';\r\n\r\nconst MenuToggle = (props) => {\r\n    let cls = 'MenuToglle';\r\n\r\n    if (props.isOpen){\r\n        cls += ' open';\r\n    }\r\n\r\n    const icons = props.isOpen? faTimes : faBars ;\r\n    return (\r\n\r\n        <FontAwesomeIcon icon={icons} onClick={props.onToggle} className={cls}/>\r\n    )\r\n}\r\nexport default MenuToggle;","import React from 'react'\r\nimport './Backdrop.css'\r\n\r\nconst Backdrop = props => <div className='Backdrop' onClick={props.onClick}/>\r\n\r\nexport default Backdrop;","import React, { Component } from 'react' \r\nimport {NavLink} from 'react-router-dom';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop'\r\nimport './Drawer.css';\r\nconst link = [\r\n    {to:\"/\" , lable:\"список\", exact: true},\r\n    {to:\"/auth\" , lable:\"Авторизация\", exact: false},\r\n    {to:\"/quiz-creator\" , lable:\"Создавать тест\", exact: false}\r\n\r\n\r\n]\r\nclass Drawer extends Component {\r\n    clickHandel =() => {\r\n        this.props.onClose()\r\n    }\r\n    renderLinks(){\r\n        return  link.map((link, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    <NavLink\r\n                        to={link.to}\r\n                        exact={link.exact}\r\n                        activeClassName=\" active\"\r\n                        onClick={this.clickHandel}\r\n                    >\r\n                        {link.lable}\r\n                        \r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n    render () {\r\n        let cls = 'Drawer';\r\n        if ( !this.props.isOpen){\r\n            cls += '  close'\r\n        }\r\n        return (\r\n            <>\r\n            <nav className={cls}>\r\n                <ul>\r\n                    {this.renderLinks()}\r\n                </ul>\r\n\r\n            </nav>\r\n            {this.props.isOpen? <Backdrop onClick={this.props.onClose}/> : null}\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default Drawer;","import React, {Component} from 'react';\r\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle'\r\nimport Drawer from '../../components/Navigation/Drawer/Drawer'\r\nimport './layout.css';\r\n\r\nclass Layout extends Component {\r\n\r\n    state={\r\n        menu: false\r\n    }\r\n    toggleMenu = () => {\r\n        this.setState({\r\n            menu : !this.state.menu \r\n        })\r\n    }\r\n    menuCloseHandler= () => {\r\n        this.setState({\r\n            menu: false\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='layout'>\r\n                <Drawer\r\n                 isOpen={this.state.menu}\r\n                 onClose={this.menuCloseHandler}\r\n                />\r\n                <MenuToggle\r\n                onToggle={this.toggleMenu}\r\n                isOpen={this.state.menu}\r\n                />\r\n                <main >\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Layout;\r\n","import React from 'react' ;\r\nimport './AnswersItem.css';\r\n\r\nconst AnswersItem = (props) => {\r\n\r\n    // const cls = ['AnswersItem'];\r\n    let cls = 'AnswersItem ';\r\n\r\n    if (props.state) {\r\n        // cls.push(props.state)\r\n        cls += props.state;\r\n    } \r\n    \r\n    return (\r\n        <li \r\n            // className= {cls.join(' ')} \r\n            className= {cls} \r\n            onClick={() => props.onClickAnswer (props.answer.id)}\r\n            >\r\n                \r\n            {props.answer.text}\r\n            \r\n\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default AnswersItem; ","import React from 'react';\r\nimport AnswersItem from './AnswersItem/AnswersItem';\r\n\r\nimport './AnswersList.css';\r\n\r\nconst AnswersList = props => (\r\n    <ul className='AnswersList'>\r\n        \r\n        {props.answers.map((answer, index) => {\r\n           \r\n           return (\r\n               <AnswersItem \r\n               key = {index}\r\n               answer={answer}\r\n               onClickAnswer = {props.onClickAnswer}\r\n               state ={props.state ? props.state[answer.id] : null}\r\n               />\r\n            ) \r\n\r\n        })}\r\n    </ul>\r\n)\r\n\r\nexport default AnswersList; ","import React from 'react';\r\nimport AnswersList from './AnswersList/AnswersList';\r\nimport './ActiveQuiz.css';\r\n\r\nconst ActiveQuiz = props => {\r\n    return (\r\n        <div className='ActiveQuiz'>\r\n            <p className='question'> \r\n                <span>\r\n                    <strong>{props.answerNumber}.</strong>&nbsp;\r\n                    {props.question}\r\n                </span>\r\n                <small> {props.answerNumber} из {props.quizLength}</small>\r\n            </p>\r\n            <AnswersList \r\n                state={props.state}\r\n                answers={props.answers}\r\n                onClickAnswer = {props.onAnswerClickHandel}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default ActiveQuiz;","import React from 'react' ;\r\nimport './Button.css';\r\n\r\nconst Button = (props) => {\r\n    const clc = [\r\n        'Button',\r\n        [props.type]\r\n    ]\r\n    return (\r\n        <button\r\n            onClick={props.onClick}\r\n            className={clc.join(' ')}\r\n            disabled={props.disabled}\r\n\r\n        >\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport Button from '../UI/Button/Button'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faTimes} from '@fortawesome/free-solid-svg-icons';\r\nimport {Link} from 'react-router-dom';\r\nimport './success.css';\r\n\r\n\r\nconst Finish = (props) => {\r\n    const successCount = Object.keys(props.results).reduce((total, key) => {\r\n        if (props.results[key] === 'Success'){\r\n            total ++\r\n        }\r\n        return total \r\n\r\n    }, 0)\r\n    return (\r\n        <div className='finished'>\r\n           <ul>\r\n               {props.quiz.map((quizItem, index) => {\r\n                   const icons = (props.results[quizItem.id]) === 'error' ? faTimes : faCheck ;\r\n                   const clc = [\r\n                       'margin',\r\n                       props.results[quizItem.id] === 'error' ? 'error' : 'Success'\r\n                    ]\r\n                    \r\n                   return (\r\n                       <li \r\n                        key={index}\r\n                       >\r\n                           <strong>{index + 1} </strong>. &nbsp;\r\n                           {quizItem.question}\r\n                           <FontAwesomeIcon icon={icons} className={clc.join(' ')} />\r\n                       </li>\r\n                       \r\n                   )\r\n               })}\r\n               \r\n           </ul>\r\n           <p> правильно {successCount} из {props.quiz.length}</p>\r\n           <div>\r\n               <Button onClick={props.onReplay} type=\"primary\">Повторить</Button>\r\n               <Link to='/'>\r\n                    <Button  type=\"success\">Перейти в список тестов</Button>\r\n               </Link>\r\n           </div> \r\n           \r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Finish;","import axios from 'axios' ;\r\nexport default axios.create({\r\n    baseURL: 'https://react-quiz-cb1f1-default-rtdb.firebaseio.com/'\r\n})","import React from 'react';\r\nimport './loader.css';\r\n\r\n const Loader = props => {\r\n     return (\r\n         <div className=\"center\">\r\n            <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n        </div>\r\n     )\r\n\r\n}\r\nexport default Loader;","import React, {Component} from 'react';\r\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz'\r\nimport Finish from '../../components/success/Success';\r\nimport axios from '../../axios/axios';\r\nimport Loader from '../../components/UI/loader/loader'\r\n\r\nimport './Quiz.css';\r\n\r\nclass Quiz extends Component {\r\n    state = {\r\n        results: {},\r\n        isFinished : false,\r\n        activeQuestion : 0,\r\n        answerState : null,\r\n        quiz: [],\r\n        loading: true\r\n    }\r\n\r\n    onAnswerClickHandel = (answerId) => {\r\n\r\n        if ( this.state.answerState) {\r\n            const key = Object.keys(this.state.answerState)[0];\r\n            if ( this.state.answerState[key] === 'Success'){\r\n                return \r\n            }\r\n        }\r\n    \r\n        const question = this.state.quiz[this.state.activeQuestion] ;\r\n        const results = this.state.results;\r\n\r\n        if (question.rightAnswerId === answerId) {\r\n            \r\n            if ( !results[question.id] ){\r\n                results[question.id] = 'Success';\r\n            }\r\n            this.setState ({\r\n                answerState: { [answerId]: 'Success'},\r\n                results\r\n            })\r\n            const timeOut = window.setTimeout( () => { \r\n                if (this.isQuizFinished()){\r\n                    this.setState({\r\n                        isFinished: true\r\n                    })\r\n                \r\n                }else {\r\n                    this.setState({\r\n                        activeQuestion: this.state.activeQuestion + 1,\r\n                        answerState: null \r\n                    })\r\n                }\r\n            \r\n                window.clearTimeout(timeOut);\r\n\r\n            }, 1000)\r\n            \r\n\r\n        }else {\r\n            \r\n            results[question.id] = 'error';\r\n            this.setState({\r\n                answerState: { [answerId]: 'error'},\r\n                results \r\n            })\r\n            \r\n        }       \r\n    }\r\n    \r\n    isQuizFinished () {\r\n        return this.state.activeQuestion +1 === this.state.quiz.length \r\n\r\n    }\r\n    onReplay = () => {\r\n        this.setState ({\r\n            results: {},\r\n            isFinished : false,\r\n            activeQuestion : 0,\r\n            answerState : null,\r\n        });\r\n    }\r\n    async componentDidMount () {\r\n        \r\n        let ides = this.props.match.params.id;\r\n     \r\n        try {\r\n            const response = await axios.get(`quizes/${ides}.json`)\r\n            const quiz = response.data\r\n            this.setState({\r\n                quiz,\r\n                loading:false\r\n            })\r\n\r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n       \r\n        return (\r\n            <div className='Quiz'>\r\n                <div className='QuizWrapper'>\r\n                    <h1>Ответьете на все вопросы </h1> \r\n                    <h3 >Внимание! Только первый ответ будет засчитан </h3>\r\n                    { this.state.loading ? <Loader/> :\r\n                        this.state.isFinished ? <Finish\r\n                        results = {this.state.results}\r\n                        quiz = { this.state.quiz}\r\n                        onReplay={this.onReplay}\r\n                        /> \r\n                        : \r\n                        <ActiveQuiz \r\n                        answers={this.state.quiz[this.state.activeQuestion].answers}\r\n                        question = {this.state.quiz[this.state.activeQuestion].question}\r\n                        onAnswerClickHandel = {this.onAnswerClickHandel}\r\n                        quizLength = {this.state.quiz.length}\r\n                        answerNumber = { this.state.activeQuestion + 1}\r\n                        state= {this.state.answerState}\r\n                        \r\n                        />\r\n                    }\r\n                   \r\n                </div>\r\n                \r\n\r\n            </div>\r\n        )\r\n        \r\n    }\r\n}\r\nexport default Quiz; ","import React from 'react';\r\nimport './Input.css';\r\n\r\nfunction isInvalid ({valid, touched, shouldValidate}) {\r\n    return !valid && shouldValidate && touched\r\n}\r\nconst Input = props => {\r\nconst inputType = props.type || 'text';\r\nlet cls = 'Input';\r\nconst htmlFor = `${inputType}-${Math.random()}`;\r\n\r\nif( isInvalid (props)){\r\n    cls+= ' invalid'\r\n}\r\n\r\n    return (\r\n        <div className={cls}>\r\n           <label htmlFor={htmlFor} >{props.label}</label>\r\n           <input \r\n                type={inputType}\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n\r\n           /> \r\n           {isInvalid (props)?<span>{props.errorMessage || 'Введите верное значение'}</span> : null }\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input; ","import React, { Component } from 'react'\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Input from '../../components/UI/Input/Input'\r\nimport './Auth.css';\r\n\r\nfunction validateEmail(email) {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\nfunction validatePassword(pw) {\r\n\r\n    return /[a-z]/.test(pw) &&\r\n           /[0-9]/.test(pw) &&\r\n           pw.length > 4;\r\n          \r\n}\r\n\r\nexport class Auth extends Component {\r\n\r\n    state = {\r\n        isFormValid: false,\r\n        formControls : {\r\n            email:{\r\n                value: '',\r\n                type: 'email',\r\n                label:'Email',\r\n                errorMessage:'Введите корректный Email',\r\n                valid: false,\r\n                touched:false,\r\n                validation: {\r\n                    required:true,\r\n                    email:true\r\n                }\r\n            },\r\n            password: {\r\n                value: '',\r\n                type: 'password',\r\n                label:'Пароль',\r\n                errorMessage:'Введите корректный Пароль',\r\n                valid: false,\r\n                touched:false,\r\n                validation: {\r\n                    required:true,\r\n                    minLength: true\r\n                }\r\n            }\r\n        }\r\n    }\r\n    loginHandler = () => {\r\n\r\n    }\r\n\r\n    registerHandler = () => {\r\n\r\n    }\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    validateControl (value, validation){\r\n        if(!validation){\r\n            return true\r\n        }\r\n\r\n        let isValid = true;\r\n        \r\n        if(validation.required){\r\n            isValid=value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if(validation.email){\r\n           isValid = validateEmail(value) && isValid\r\n        }\r\n\r\n        if(validation.minLength){\r\n            isValid= validatePassword(value) && isValid\r\n            \r\n        }\r\n\r\n        return isValid;\r\n\r\n    }\r\n\r\n    onChangeHandler = (event,controlName) => {\r\n        const formControls = {...this.state.formControls};\r\n        const control = {...formControls[controlName]};\r\n        control.value = event.target.value;\r\n        control.touched = true;\r\n        \r\n        control.valid =this.validateControl(control.value , control.validation)\r\n        formControls[controlName] = control;\r\n        \r\n        let isFormValid =true;\r\n\r\n        Object.keys(formControls).forEach(name => {\r\n            isFormValid = formControls[name].valid && isFormValid;\r\n        })\r\n        this.setState ({\r\n            formControls, isFormValid\r\n        })\r\n        \r\n\r\n    }\r\n\r\n    renderInput(){\r\n        \r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName];\r\n            return (\r\n                <Input\r\n                    key={controlName + index}\r\n                    type={control.type}\r\n                    value={control.value}\r\n                    valid={control.valid}\r\n                    touched={control.touched}\r\n                    label={control.label}\r\n                    shouldValidate={!!control.validation}\r\n                    errorMessage ={control.errorMessage}\r\n                    onChange={event => this.onChangeHandler(event,controlName)}\r\n                />\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className='Auth'>\r\n                <div>\r\n                    <h1>Авторизация</h1>\r\n                    <form onSubmit={this.submitHandler} className='AuthForm'>\r\n                       {this.renderInput()}\r\n                        <Button \r\n                            type=\"success\" \r\n                            onClick={this.loginHandler}\r\n                            disabled = {!this.state.isFormValid}\r\n                        >\r\n                            Войти\r\n                        </Button>\r\n                        <Button \r\n                            type=\"primary\" \r\n                            onClick={this.registerHandler}\r\n                            disabled = {!this.state.isFormValid}\r\n                            \r\n                        >\r\n                            Зарегистрироваться\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Auth\r\n\r\n","export function creatControl (config, validation) {\r\n    return {\r\n        ...config,\r\n        validation,\r\n        valid:! validation,\r\n        touched: false,\r\n        value: ''\r\n    }\r\n}\r\nexport function validate ( value, validation= null) {\r\n     if (!validation) {\r\n         return true;\r\n     }\r\n     let isValid = true;\r\n\r\n     if (validation.required){\r\n         isValid = value.trim() !== '' && isValid;\r\n     }\r\n     return isValid;\r\n}\r\nexport function validateForm (formControls) {\r\n    let isFormValid = true;\r\n    \r\n    for (let control in formControls) {\r\n        if (formControls.hasOwnProperty(control)){\r\n            isFormValid = formControls[control].valid && isFormValid;\r\n        }\r\n    }\r\n    return isFormValid; \r\n}","const Auxiliary = props => props.children \r\nexport default Auxiliary;","import React from 'react';\r\nimport './Select.css';\r\n\r\nconst Select = props => {\r\n\r\n    const htmlFor = `${props.label}- ${Math.random()}`;\r\n    return (\r\n        <div className=\"Select\">\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <select\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            >\r\n                {props.options.map((option,index) => {\r\n                    return (\r\n                        <option\r\n                            value={option.value}\r\n                            key={option.value + index}\r\n                        >\r\n                            {option.text}\r\n                        </option>\r\n                    )\r\n                })}\r\n            </select>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Select;","import React, { Component } from 'react';\r\nimport './QuizCreator.css';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport {creatControl, validate, validateForm} from '../../Form/Form';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Auxiliary from '../../hos/Auxiliyar/Auxiliary';\r\nimport Select from '../../components/UI/Select/Select';\r\nimport axios from '../../axios/axios';\r\n\r\nfunction creatOptionControl (number) {\r\n    return creatControl({\r\n        label: `Вариант ${number}`,\r\n        errorMessage: 'значение не может быть пустым',\r\n        id: number \r\n    }, {required: true})\r\n}\r\n\r\nfunction creatFormControl () {\r\n    return {\r\n        question: creatControl({\r\n            label: 'Введите вопрос',\r\n            errorMessage: 'Вопрос не может быть пустым'\r\n        }, {required: true}),\r\n        option1: creatOptionControl(1),\r\n        option2: creatOptionControl(2),\r\n        option3: creatOptionControl(3),\r\n        option4: creatOptionControl(4)\r\n    }\r\n}\r\nexport class QuizCreator extends Component {\r\n\r\n    state = {\r\n        quiz :[],\r\n        formControls:creatFormControl (),\r\n        isFormValid: false,\r\n        rightAnswerId : 1\r\n    }\r\n\r\n    submitHandler=(event) => {\r\n        event.preventDefault();\r\n    }\r\n    addQuestionHandler = event => {\r\n        event.preventDefault();\r\n        const quiz = [...this.state.quiz];\r\n        const index = quiz.length +1 ;\r\n\r\n        const {question, option1,option2,option3,option4} = this.state.formControls \r\n        const questionItem = {\r\n            question:question.value,\r\n            id : index,\r\n            rightAnswerId: this.state.rightAnswerId,\r\n            answers : [\r\n                {text: option1.value, id: option1.id},\r\n                {text: option2.value, id: option2.id},\r\n                {text: option3.value, id: option3.id},\r\n                {text: option4.value, id: option4.id}\r\n            ]\r\n        }\r\n        console.log(questionItem.answers);\r\n        quiz.push(questionItem);\r\n        this.setState({\r\n            quiz,\r\n            formControls:creatFormControl (),\r\n            isFormValid: false,\r\n            rightAnswerId : 1\r\n        })\r\n    }\r\n\r\n    creatQuizHandler= async event => {\r\n        event.preventDefault();\r\n        \r\n        try {\r\n             await axios.post('quizes.json', this.state.quiz)\r\n            \r\n            this.setState({\r\n                quiz: [],\r\n                formControls:creatFormControl (),\r\n                isFormValid: false,\r\n                rightAnswerId : null\r\n            })\r\n\r\n        }catch(e) {\r\n            console.log(e);\r\n        }\r\n        \r\n    }\r\n\r\n    changeHandler = (value, controlName) => {\r\n     const formControls = {...this.state.formControls};\r\n     const control = {...formControls[controlName]}\r\n\r\n     control.touched = true;\r\n     control.value = value; \r\n     control.valid = validate (control.value, control.validation)\r\n     \r\n\r\n     formControls[controlName] = control;\r\n\r\n     this.setState({\r\n         formControls, \r\n         isFormValid : validateForm(formControls)\r\n     })\r\n    }\r\n\r\n    renderControls = () => {\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName];\r\n            return (\r\n\r\n                <Auxiliary key ={index + controlName}>\r\n                    <Input\r\n                        \r\n                        label={control.label}\r\n                        value={control.value}\r\n                        valid={control.valid}\r\n                        shouldValidate ={!! control.validation}\r\n                        touched={control.touched}\r\n                        errorMessage ={control.errorMessage}\r\n                        onChange={event=> this.changeHandler(event.target.value, controlName)}\r\n                    />\r\n                    {index === 0 ? <hr/> : null}\r\n                </Auxiliary>\r\n            )\r\n        })\r\n    }\r\n    selectChangeHandler = (event) => {\r\n        this.setState({\r\n            rightAnswerId : +event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const select = <Select\r\n            label=\"Выберите правильный ответ\"\r\n            value = {this.state.rightAnswerId}\r\n            onChange = {this.selectChangeHandler}\r\n            options = {[\r\n                {text: 1 , value : 1},\r\n                {text: 2 , value : 2},\r\n                {text: 3 , value : 3},\r\n                {text: 4 , value : 4}\r\n            ]}\r\n        />\r\n        return (\r\n             <div className='QuizCreator'>\r\n                 <div>\r\n                     <h1>Создание теста</h1>\r\n                     <form onSubmit={this.submitHandler}>\r\n                         {this.renderControls()}\r\n                         {select}\r\n                         <Button\r\n                         type=\"primary\"\r\n                         onClick={this.addQuestionHandler}\r\n                         disabled={!this.state.isFormValid}\r\n                         >\r\n                             Добавить вопрос\r\n                         </Button>\r\n                         <Button\r\n                             type=\"success\"\r\n                             onClick={this.creatQuizHandler}\r\n                             disabled={this.state.quiz.length === 0}\r\n                         >\r\n                             Создавть тест\r\n                         </Button>\r\n                     </form>\r\n                  \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default QuizCreator;","import React, { Component } from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport axios from '../../axios/axios'\r\nimport Loader from '../../components/UI/loader/loader'\r\nimport './QuizList.css';\r\nexport class QuizList extends Component {\r\n    state = {\r\n        quizes : [],\r\n        Loading : true,\r\n    }\r\n    renderQuizes () {\r\n            return this.state.quizes.map(quiz => {\r\n                return(\r\n                    <li key={quiz.id}>\r\n                        <NavLink to={'/quiz/' + quiz.id}>\r\n                            {quiz.name}\r\n                        </NavLink>\r\n                    </li>\r\n                )\r\n                \r\n            })\r\n    }\r\n    async componentDidMount(){\r\n       try {\r\n        const response = await axios.get('quizes.json')\r\n\r\n        const quizes = []\r\n\r\n        Object.keys(response.data).forEach( (key, index) => {\r\n            quizes.push({\r\n                id: key,\r\n                name:`Тест №${index+1}`\r\n            })\r\n        })\r\n        this.setState({\r\n            quizes, Loading: false\r\n        })\r\n       }catch(e){\r\n           console.log(e);\r\n       }\r\n    }\r\n    render() {\r\n        return (\r\n             <div className=\"QuizList\">\r\n                 <div>\r\n                      <h1>Список тестов</h1>\r\n                      {this.state.Loading ? <Loader/> : \r\n                      <ul>\r\n                          { this.renderQuizes() }\r\n                      </ul>\r\n                      }\r\n                 </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default QuizList;","import React,{Component} from 'react';\nimport Layout from './hos/Layout/layout';\nimport {Route, Switch} from 'react-router-dom';\nimport Quiz from './containers/Quiz/Quiz';\nimport Auth from './containers/Auth/Auth';\nimport QuizCreator from './containers/QuizCreator/QuizCreator';\nimport QuizList from './containers/QuizList/QuizList';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Layout>\n         <Switch>\n           <Route path=\"/auth\" component={Auth}/>\n           <Route path=\"/quiz-creator\" component={QuizCreator}/>\n           <Route path=\"/quiz/:id\" component={Quiz}/>\n           <Route path=\"/\" component={QuizList}/>\n         </Switch>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\n\nconst app = (\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>\n)\n\nReactDOM.render(app,document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}